{"version":3,"sources":["node_modules/cbor-js/cbor.js","node_modules/eventemitter2/lib/eventemitter2.js","node_modules/object-assign/index.js","src/app/components/joystick/joystick.component.html","src/app/components/map/map.component.html","src/app/components/streaming/streaming.component.html","src/app/pages/play/play.page.html","node_modules/roslib/src/RosLib.js","node_modules/roslib/src/actionlib/ActionClient.js","node_modules/roslib/src/actionlib/ActionListener.js","node_modules/roslib/src/actionlib/Goal.js","node_modules/roslib/src/actionlib/SimpleActionServer.js","node_modules/roslib/src/actionlib/index.js","node_modules/roslib/src/core/Message.js","node_modules/roslib/src/core/Param.js","node_modules/roslib/src/core/Ros.js","node_modules/roslib/src/core/Service.js","node_modules/roslib/src/core/ServiceRequest.js","node_modules/roslib/src/core/ServiceResponse.js","node_modules/roslib/src/core/SocketAdapter.js","node_modules/roslib/src/core/Topic.js","node_modules/roslib/src/core/index.js","node_modules/roslib/src/math/Pose.js","node_modules/roslib/src/math/Quaternion.js","node_modules/roslib/src/math/Transform.js","node_modules/roslib/src/math/Vector3.js","node_modules/roslib/src/math/index.js","node_modules/roslib/src/mixin.js","node_modules/roslib/src/tf/TFClient.js","node_modules/roslib/src/tf/index.js","node_modules/roslib/src/urdf/UrdfBox.js","node_modules/roslib/src/urdf/UrdfColor.js","node_modules/roslib/src/urdf/UrdfCylinder.js","node_modules/roslib/src/urdf/UrdfJoint.js","node_modules/roslib/src/urdf/UrdfLink.js","node_modules/roslib/src/urdf/UrdfMaterial.js","node_modules/roslib/src/urdf/UrdfMesh.js","node_modules/roslib/src/urdf/UrdfModel.js","node_modules/roslib/src/urdf/UrdfSphere.js","node_modules/roslib/src/urdf/UrdfTypes.js","node_modules/roslib/src/urdf/UrdfVisual.js","node_modules/roslib/src/urdf/index.js","node_modules/roslib/src/util/cborTypedArrayTags.js","node_modules/roslib/src/util/shim/WebSocket.js","node_modules/roslib/src/util/shim/canvas.js","node_modules/roslib/src/util/shim/decompressPng.js","node_modules/roslib/src/util/shim/xmldom.js","node_modules/roslib/src/util/workerSocket.js","node_modules/roslib/src/util/workerSocketImpl.js","node_modules/webworkify/index.js","src/app/components/joystick/joystick.component.ts","src/app/components/map/map.component.scss","src/app/components/map/map.component.ts","src/app/components/streaming/streaming.component.scss","src/app/components/streaming/streaming.component.ts","src/app/pages/play/play.module.ts","src/app/pages/play/play.page.ts","src/app/services/ros/navigation.service.ts","src/app/services/ros/ros.service.ts","src/app/services/ros/streaming.service.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 Patrick Gansterer <paroga@paroga.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n(function(global, undefined) { \"use strict\";\r\nvar POW_2_24 = Math.pow(2, -24),\r\n    POW_2_32 = Math.pow(2, 32),\r\n    POW_2_53 = Math.pow(2, 53);\r\n\r\nfunction encode(value) {\r\n  var data = new ArrayBuffer(256);\r\n  var dataView = new DataView(data);\r\n  var lastLength;\r\n  var offset = 0;\r\n\r\n  function ensureSpace(length) {\r\n    var newByteLength = data.byteLength;\r\n    var requiredLength = offset + length;\r\n    while (newByteLength < requiredLength)\r\n      newByteLength *= 2;\r\n    if (newByteLength !== data.byteLength) {\r\n      var oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      var uint32count = (offset + 3) >> 2;\r\n      for (var i = 0; i < uint32count; ++i)\r\n        dataView.setUint32(i * 4, oldDataView.getUint32(i * 4));\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n  function write() {\r\n    offset += lastLength;\r\n  }\r\n  function writeFloat64(value) {\r\n    write(ensureSpace(8).setFloat64(offset, value));\r\n  }\r\n  function writeUint8(value) {\r\n    write(ensureSpace(1).setUint8(offset, value));\r\n  }\r\n  function writeUint8Array(value) {\r\n    var dataView = ensureSpace(value.length);\r\n    for (var i = 0; i < value.length; ++i)\r\n      dataView.setUint8(offset + i, value[i]);\r\n    write();\r\n  }\r\n  function writeUint16(value) {\r\n    write(ensureSpace(2).setUint16(offset, value));\r\n  }\r\n  function writeUint32(value) {\r\n    write(ensureSpace(4).setUint32(offset, value));\r\n  }\r\n  function writeUint64(value) {\r\n    var low = value % POW_2_32;\r\n    var high = (value - low) / POW_2_32;\r\n    var dataView = ensureSpace(8);\r\n    dataView.setUint32(offset, high);\r\n    dataView.setUint32(offset + 4, low);\r\n    write();\r\n  }\r\n  function writeTypeAndLength(type, length) {\r\n    if (length < 24) {\r\n      writeUint8(type << 5 | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8(type << 5 | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8(type << 5 | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8(type << 5 | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8(type << 5 | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n  \r\n  function encodeItem(value) {\r\n    var i;\r\n\r\n    if (value === false)\r\n      return writeUint8(0xf4);\r\n    if (value === true)\r\n      return writeUint8(0xf5);\r\n    if (value === null)\r\n      return writeUint8(0xf6);\r\n    if (value === undefined)\r\n      return writeUint8(0xf7);\r\n  \r\n    switch (typeof value) {\r\n      case \"number\":\r\n        if (Math.floor(value) === value) {\r\n          if (0 <= value && value <= POW_2_53)\r\n            return writeTypeAndLength(0, value);\r\n          if (-POW_2_53 <= value && value < 0)\r\n            return writeTypeAndLength(1, -(value + 1));\r\n        }\r\n        writeUint8(0xfb);\r\n        return writeFloat64(value);\r\n\r\n      case \"string\":\r\n        var utf8data = [];\r\n        for (i = 0; i < value.length; ++i) {\r\n          var charCode = value.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | charCode >> 6);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else if (charCode < 0xd800) {\r\n            utf8data.push(0xe0 | charCode >> 12);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= value.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | charCode >> 18);\r\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        var length;\r\n        if (Array.isArray(value)) {\r\n          length = value.length;\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; ++i)\r\n            encodeItem(value[i]);\r\n        } else if (value instanceof Uint8Array) {\r\n          writeTypeAndLength(2, value.length);\r\n          writeUint8Array(value);\r\n        } else {\r\n          var keys = Object.keys(value);\r\n          length = keys.length;\r\n          writeTypeAndLength(5, length);\r\n          for (i = 0; i < length; ++i) {\r\n            var key = keys[i];\r\n            encodeItem(key);\r\n            encodeItem(value[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n  \r\n  encodeItem(value);\r\n\r\n  if (\"slice\" in data)\r\n    return data.slice(0, offset);\r\n  \r\n  var ret = new ArrayBuffer(offset);\r\n  var retView = new DataView(ret);\r\n  for (var i = 0; i < offset; ++i)\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  return ret;\r\n}\r\n\r\nfunction decode(data, tagger, simpleValue) {\r\n  var dataView = new DataView(data);\r\n  var offset = 0;\r\n  \r\n  if (typeof tagger !== \"function\")\r\n    tagger = function(value) { return value; };\r\n  if (typeof simpleValue !== \"function\")\r\n    simpleValue = function() { return undefined; };\r\n\r\n  function read(value, length) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n  function readArrayBuffer(length) {\r\n    return read(new Uint8Array(data, offset, length), length);\r\n  }\r\n  function readFloat16() {\r\n    var tempArrayBuffer = new ArrayBuffer(4);\r\n    var tempDataView = new DataView(tempArrayBuffer);\r\n    var value = readUint16();\r\n\r\n    var sign = value & 0x8000;\r\n    var exponent = value & 0x7c00;\r\n    var fraction = value & 0x03ff;\r\n    \r\n    if (exponent === 0x7c00)\r\n      exponent = 0xff << 10;\r\n    else if (exponent !== 0)\r\n      exponent += (127 - 15) << 10;\r\n    else if (fraction !== 0)\r\n      return fraction * POW_2_24;\r\n    \r\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n  function readFloat32() {\r\n    return read(dataView.getFloat32(offset), 4);\r\n  }\r\n  function readFloat64() {\r\n    return read(dataView.getFloat64(offset), 8);\r\n  }\r\n  function readUint8() {\r\n    return read(dataView.getUint8(offset), 1);\r\n  }\r\n  function readUint16() {\r\n    return read(dataView.getUint16(offset), 2);\r\n  }\r\n  function readUint32() {\r\n    return read(dataView.getUint32(offset), 4);\r\n  }\r\n  function readUint64() {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n  function readBreak() {\r\n    if (dataView.getUint8(offset) !== 0xff)\r\n      return false;\r\n    offset += 1;\r\n    return true;\r\n  }\r\n  function readLength(additionalInformation) {\r\n    if (additionalInformation < 24)\r\n      return additionalInformation;\r\n    if (additionalInformation === 24)\r\n      return readUint8();\r\n    if (additionalInformation === 25)\r\n      return readUint16();\r\n    if (additionalInformation === 26)\r\n      return readUint32();\r\n    if (additionalInformation === 27)\r\n      return readUint64();\r\n    if (additionalInformation === 31)\r\n      return -1;\r\n    throw \"Invalid length encoding\";\r\n  }\r\n  function readIndefiniteStringLength(majorType) {\r\n    var initialByte = readUint8();\r\n    if (initialByte === 0xff)\r\n      return -1;\r\n    var length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || (initialByte >> 5) !== majorType)\r\n      throw \"Invalid indefinite length element\";\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16data(utf16data, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n      var value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = (value & 0x1f) <<  6\r\n                | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = (value & 0x0f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value = (value & 0x0f) << 18\r\n                | (readUint8() & 0x3f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem() {\r\n    var initialByte = readUint8();\r\n    var majorType = initialByte >> 5;\r\n    var additionalInformation = initialByte & 0x1f;\r\n    var i;\r\n    var length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType))\r\n      throw \"Invalid length\";\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          var elements = [];\r\n          var fullArrayLength = 0;\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n          var fullArray = new Uint8Array(fullArrayLength);\r\n          var fullArrayOffset = 0;\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n          return fullArray;\r\n        }\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        var utf16data = [];\r\n        if (length < 0) {\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\r\n            appendUtf16data(utf16data, length);\r\n        } else\r\n          appendUtf16data(utf16data, length);\r\n        return String.fromCharCode.apply(null, utf16data);\r\n      case 4:\r\n        var retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak())\r\n            retArray.push(decodeItem());\r\n        } else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i)\r\n            retArray[i] = decodeItem();\r\n        }\r\n        return retArray;\r\n      case 5:\r\n        var retObject = {};\r\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r\n          var key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n        return retObject;\r\n      case 6:\r\n        return tagger(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined;\r\n          default:\r\n            return simpleValue(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  var ret = decodeItem();\r\n  if (offset !== data.byteLength)\r\n    throw \"Remaining bytes\";\r\n  return ret;\r\n}\r\n\r\nvar obj = { encode: encode, decode: decode };\r\n\r\nif (typeof define === \"function\" && define.amd)\r\n  define(\"cbor/cbor\", obj);\r\nelse if (typeof module !== 'undefined' && module.exports)\r\n  module.exports = obj;\r\nelse if (!global.CBOR)\r\n  global.CBOR = obj;\r\n\r\n})(this);\r\n","/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\n;!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this.newListener = conf.newListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. ' + count + ' listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: ' + eventName + '.';\r\n    }\r\n\r\n    if(typeof process !== 'undefined' && process.emitWarning){\r\n      var e = new Error(errorMsg);\r\n      e.name = 'MaxListenersExceededWarning';\r\n      e.emitter = this;\r\n      e.count = count;\r\n      process.emitWarning(e);\r\n    } else {\r\n      console.error(errorMsg);\r\n\r\n      if (console.trace){\r\n        console.trace();\r\n      }\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this.newListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._maxListeners > 0 &&\r\n            tree._listeners.length > this._maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    return this._once(event, fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependOnceListener = function(event, fn) {\r\n    return this._once(event, fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype._once = function(event, fn, prepend) {\r\n    this._many(event, 1, fn, prepend);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, false);\r\n  }\r\n\r\n  EventEmitter.prototype.prependMany = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, true);\r\n  }\r\n\r\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this._on(event, listener, prepend);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    return this._on(type, listener, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependListener = function(type, listener) {\r\n    return this._on(type, listener, true);\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    return this._onAny(fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependAny = function(fn) {\r\n    return this._onAny(fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype._onAny = function(fn, prepend){\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    if(prepend){\r\n      this._all.unshift(fn);\r\n    }else{\r\n      this._all.push(fn);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype._on = function(type, listener, prepend) {\r\n    if (typeof type === 'function') {\r\n      this._onAny(type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just add\r\n      if(prepend){\r\n        this._events[type].unshift(listener);\r\n      }else{\r\n        this._events[type].push(listener);\r\n      }\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._maxListeners > 0 &&\r\n        this._events[type].length > this._maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++)\r\n        this.emit(\"removeListenerAny\", fns[i]);\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (arguments.length === 0) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.eventNames = function(){\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n     // AMD. Register as an anonymous module.\r\n    define(function() {\r\n      return EventEmitter;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    // CommonJS\r\n    module.exports = EventEmitter;\r\n  }\r\n  else {\r\n    // Browser global.\r\n    window.EventEmitter2 = EventEmitter;\r\n  }\r\n}();\r\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","export default \"  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n\\n    <ion-button (click)=\\\"navigationService.move('U')\\\" style=\\\"padding-left:34%;\\\">\\n      <ion-icon name=\\\"arrow-up\\\"></ion-icon>\\n    </ion-button>\\n    \\n    <div style=\\\"display:flex\\\">\\n      <ion-button (click)=\\\"navigationService.move('L')\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n\\n      <ion-button (click)=\\\"navigationService.move('S')\\\">\\n        <ion-icon name=\\\"square\\\"></ion-icon>\\n      </ion-button>\\n      \\n      <ion-button (click)=\\\"navigationService.move('R')\\\">\\n        <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\n      </ion-button>\\n    </div>\\n\\n    <ion-button (click)=\\\"navigationService.move('D')\\\" style=\\\"padding-left:34%;\\\">\\n      <ion-icon name=\\\"arrow-down\\\"></ion-icon>\\n    </ion-button>\\n\\n  </ion-fab>\\n\\n\"","export default \"<div class=\\\"form\\\">\\n  <section style=\\\"display:flex;justify-content: center;\\\">\\n      <p style=\\\"text-align: center;padding-top:1.5rem;\\\">Where do you wanna Jinko goes?<BR /> Jinko is going to:\\n          {{ navigationService.goalString }} </p>\\n  </section>\\n\\n\\n<section class=\\\"map\\\">\\n  <div class=\\\"blue\\\" (click)=\\\"start(2)\\\" *ngIf=\\\"loading || !connected  || service_busy\\\">\\n      <p> STUDY </p>\\n  </div>\\n  <div class=\\\"orange\\\" (click)=\\\"start(3)\\\" *ngIf=\\\"loading || !connected  || service_busy\\\">\\n      <p> GAMES </p>\\n  </div>\\n\\n</section>\\n<section class=\\\"map\\\">\\n  <div class=\\\"green\\\" (click)=\\\"start(1)\\\" *ngIf=\\\"loading || !connected  || service_busy\\\">\\n      <p> DOOR </p>\\n  </div>\\n  <div class=\\\"red\\\" (click)=\\\"start(4)\\\" *ngIf=\\\"loading || !connected  || service_busy\\\">\\n      <P>TOUR </P>\\n  </div> \\n </section>  \"","export default \"<div id=\\\"divCamera\\\"></div>\\n<joystick [streaming] = \\\"streaming\\\"></joystick>\\n\"","export default \"<ion-toolbar  \\n    *ngIf=\\\"!streaming\\\">\\n    <ion-segment \\n        [(ngModel)]=\\\"view\\\" \\n        (ionChange)=\\\"show()\\\">\\n        <ion-segment-button \\n            value=\\\"map\\\">\\n            <ion-icon \\n                name=\\\"map-outline\\\">\\n            </ion-icon>\\n        </ion-segment-button>\\n        <ion-segment-button \\n            value=\\\"camera\\\">\\n                <ion-icon \\n                    name=\\\"camera-outline\\\">\\n                </ion-icon>\\n        </ion-segment-button>\\n    </ion-segment>\\n</ion-toolbar>\\n\\n<ion-content>\\n\\n<map \\n    *ngIf=\\\"!streaming\\\"  \\n    [streaming]=\\\"streaming\\\">\\n</map>\\n\\n<streaming \\n    *ngIf=\\\"streaming\\\" \\n    [streaming]=\\\"streaming\\\">\\n</streaming>\\n\\n<ion-fab \\n    vertical=\\\"start\\\" \\n    horizontal=\\\"end\\\" \\n    slot=\\\"fixed\\\" \\n    style=\\\"padding-top:10px;\\\"  \\n    *ngIf=\\\"streaming\\\"> \\n\\n    <ion-fab-button \\n        color=\\\"light\\\">\\n        <ion-icon \\n            name=\\\"close\\\" \\n            (click)=\\\"closeStreaming()\\\">\\n        </ion-icon>\\n    </ion-fab-button>\\n\\n</ion-fab>\\n\\n\\n\"","/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\n/**\n * If you use roslib in a browser, all the classes will be exported to a global variable called ROSLIB.\n *\n * If you use nodejs, this is the variable you get when you require('roslib')\n */\nvar ROSLIB = this.ROSLIB || {\n  REVISION : '1.1.0'\n};\n\nvar assign = require('object-assign');\n\n// Add core components\nassign(ROSLIB, require('./core'));\n\nassign(ROSLIB, require('./actionlib'));\n\nassign(ROSLIB, require('./math'));\n\nassign(ROSLIB, require('./tf'));\n\nassign(ROSLIB, require('./urdf'));\n\nmodule.exports = ROSLIB;\n","/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Topic = require('../core/Topic');\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * An actionlib action client.\n *\n * Emits the following events:\n *  * 'timeout' - if a timeout occurred while sending a goal\n *  * 'status' - the status messages received from the action server\n *  * 'feedback' -  the feedback messages received from the action server\n *  * 'result' - the result returned from the action server\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * ros - the ROSLIB.Ros connection handle\n *   * serverName - the action server name, like /fibonacci\n *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n *   * timeout - the timeout length when connecting to the action server\n */\nfunction ActionClient(options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  this.serverName = options.serverName;\n  this.actionName = options.actionName;\n  this.timeout = options.timeout;\n  this.omitFeedback = options.omitFeedback;\n  this.omitStatus = options.omitStatus;\n  this.omitResult = options.omitResult;\n  this.goals = {};\n\n  // flag to check if a status has been received\n  var receivedStatus = false;\n\n  // create the topics associated with actionlib\n  this.feedbackListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/feedback',\n    messageType : this.actionName + 'Feedback'\n  });\n\n  this.statusListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/status',\n    messageType : 'actionlib_msgs/GoalStatusArray'\n  });\n\n  this.resultListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/result',\n    messageType : this.actionName + 'Result'\n  });\n\n  this.goalTopic = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/goal',\n    messageType : this.actionName + 'Goal'\n  });\n\n  this.cancelTopic = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/cancel',\n    messageType : 'actionlib_msgs/GoalID'\n  });\n\n  // advertise the goal and cancel topics\n  this.goalTopic.advertise();\n  this.cancelTopic.advertise();\n\n  // subscribe to the status topic\n  if (!this.omitStatus) {\n    this.statusListener.subscribe(function(statusMessage) {\n      receivedStatus = true;\n      statusMessage.status_list.forEach(function(status) {\n        var goal = that.goals[status.goal_id.id];\n        if (goal) {\n          goal.emit('status', status);\n        }\n      });\n    });\n  }\n\n  // subscribe the the feedback topic\n  if (!this.omitFeedback) {\n    this.feedbackListener.subscribe(function(feedbackMessage) {\n      var goal = that.goals[feedbackMessage.status.goal_id.id];\n      if (goal) {\n        goal.emit('status', feedbackMessage.status);\n        goal.emit('feedback', feedbackMessage.feedback);\n      }\n    });\n  }\n\n  // subscribe to the result topic\n  if (!this.omitResult) {\n    this.resultListener.subscribe(function(resultMessage) {\n      var goal = that.goals[resultMessage.status.goal_id.id];\n\n      if (goal) {\n        goal.emit('status', resultMessage.status);\n        goal.emit('result', resultMessage.result);\n      }\n    });\n  }\n\n  // If timeout specified, emit a 'timeout' event if the action server does not respond\n  if (this.timeout) {\n    setTimeout(function() {\n      if (!receivedStatus) {\n        that.emit('timeout');\n      }\n    }, this.timeout);\n  }\n}\n\nActionClient.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n * Cancel all goals associated with this ActionClient.\n */\nActionClient.prototype.cancel = function() {\n  var cancelMessage = new Message();\n  this.cancelTopic.publish(cancelMessage);\n};\n\n/**\n * Unsubscribe and unadvertise all topics associated with this ActionClient.\n */\nActionClient.prototype.dispose = function() {\n  this.goalTopic.unadvertise();\n  this.cancelTopic.unadvertise();\n  if (!this.omitStatus) {this.statusListener.unsubscribe();}\n  if (!this.omitFeedback) {this.feedbackListener.unsubscribe();}\n  if (!this.omitResult) {this.resultListener.unsubscribe();}\n};\n\nmodule.exports = ActionClient;\n","/**\n * @fileOverview\n * @author Justin Young - justin@oodar.com.au\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Topic = require('../core/Topic');\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * An actionlib action listener\n *\n * Emits the following events:\n *  * 'status' - the status messages received from the action server\n *  * 'feedback' -  the feedback messages received from the action server\n *  * 'result' - the result returned from the action server\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * ros - the ROSLIB.Ros connection handle\n *   * serverName - the action server name, like /fibonacci\n *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n */\nfunction ActionListener(options) {\n  var that = this;\n  options = options || {};\n  this.ros = options.ros;\n  this.serverName = options.serverName;\n  this.actionName = options.actionName;\n  this.timeout = options.timeout;\n  this.omitFeedback = options.omitFeedback;\n  this.omitStatus = options.omitStatus;\n  this.omitResult = options.omitResult;\n\n\n  // create the topics associated with actionlib\n  var goalListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/goal',\n    messageType : this.actionName + 'Goal'\n  });\n\n  var feedbackListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/feedback',\n    messageType : this.actionName + 'Feedback'\n  });\n\n  var statusListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/status',\n    messageType : 'actionlib_msgs/GoalStatusArray'\n  });\n\n  var resultListener = new Topic({\n    ros : this.ros,\n    name : this.serverName + '/result',\n    messageType : this.actionName + 'Result'\n  });\n\n  goalListener.subscribe(function(goalMessage) {\n      that.emit('goal', goalMessage);\n  });\n\n  statusListener.subscribe(function(statusMessage) {\n      statusMessage.status_list.forEach(function(status) {\n          that.emit('status', status);\n      });\n  });\n\n  feedbackListener.subscribe(function(feedbackMessage) {\n      that.emit('status', feedbackMessage.status);\n      that.emit('feedback', feedbackMessage.feedback);\n  });\n\n  // subscribe to the result topic\n  resultListener.subscribe(function(resultMessage) {\n      that.emit('status', resultMessage.status);\n      that.emit('result', resultMessage.result);\n  });\n\n}\n\nActionListener.prototype.__proto__ = EventEmitter2.prototype;\n\nmodule.exports = ActionListener;\n","/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * An actionlib goal goal is associated with an action server.\n *\n * Emits the following events:\n *  * 'timeout' - if a timeout occurred while sending a goal\n *\n *  @constructor\n *  @param object with following keys:\n *   * actionClient - the ROSLIB.ActionClient to use with this goal\n *   * goalMessage - The JSON object containing the goal for the action server\n */\nfunction Goal(options) {\n  var that = this;\n  this.actionClient = options.actionClient;\n  this.goalMessage = options.goalMessage;\n  this.isFinished = false;\n\n  // Used to create random IDs\n  var date = new Date();\n\n  // Create a random ID\n  this.goalID = 'goal_' + Math.random() + '_' + date.getTime();\n  // Fill in the goal message\n  this.goalMessage = new Message({\n    goal_id : {\n      stamp : {\n        secs : 0,\n        nsecs : 0\n      },\n      id : this.goalID\n    },\n    goal : this.goalMessage\n  });\n\n  this.on('status', function(status) {\n    that.status = status;\n  });\n\n  this.on('result', function(result) {\n    that.isFinished = true;\n    that.result = result;\n  });\n\n  this.on('feedback', function(feedback) {\n    that.feedback = feedback;\n  });\n\n  // Add the goal\n  this.actionClient.goals[this.goalID] = this;\n}\n\nGoal.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n * Send the goal to the action server.\n *\n * @param timeout (optional) - a timeout length for the goal's result\n */\nGoal.prototype.send = function(timeout) {\n  var that = this;\n  that.actionClient.goalTopic.publish(that.goalMessage);\n  if (timeout) {\n    setTimeout(function() {\n      if (!that.isFinished) {\n        that.emit('timeout');\n      }\n    }, timeout);\n  }\n};\n\n/**\n * Cancel the current goal.\n */\nGoal.prototype.cancel = function() {\n  var cancelMessage = new Message({\n    id : this.goalID\n  });\n  this.actionClient.cancelTopic.publish(cancelMessage);\n};\n\nmodule.exports = Goal;","/**\n * @fileOverview\n * @author Laura Lindzey - lindzey@gmail.com\n */\n\nvar Topic = require('../core/Topic');\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * An actionlib action server client.\n *\n * Emits the following events:\n *  * 'goal' - goal sent by action client\n *  * 'cancel' - action client has canceled the request\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * ros - the ROSLIB.Ros connection handle\n *   * serverName - the action server name, like /fibonacci\n *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n */\n\nfunction SimpleActionServer(options) {\n    var that = this;\n    options = options || {};\n    this.ros = options.ros;\n    this.serverName = options.serverName;\n    this.actionName = options.actionName;\n\n    // create and advertise publishers\n    this.feedbackPublisher = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/feedback',\n        messageType : this.actionName + 'Feedback'\n    });\n    this.feedbackPublisher.advertise();\n\n    var statusPublisher = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/status',\n        messageType : 'actionlib_msgs/GoalStatusArray'\n    });\n    statusPublisher.advertise();\n\n    this.resultPublisher = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/result',\n        messageType : this.actionName + 'Result'\n    });\n    this.resultPublisher.advertise();\n\n    // create and subscribe to listeners\n    var goalListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/goal',\n        messageType : this.actionName + 'Goal'\n    });\n\n    var cancelListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/cancel',\n        messageType : 'actionlib_msgs/GoalID'\n    });\n\n    // Track the goals and their status in order to publish status...\n    this.statusMessage = new Message({\n        header : {\n            stamp : {secs : 0, nsecs : 100},\n            frame_id : ''\n        },\n        status_list : []\n    });\n\n    // needed for handling preemption prompted by a new goal being received\n    this.currentGoal = null; // currently tracked goal\n    this.nextGoal = null; // the one that'll be preempting\n\n    goalListener.subscribe(function(goalMessage) {\n        \n    if(that.currentGoal) {\n            that.nextGoal = goalMessage;\n            // needs to happen AFTER rest is set up\n            that.emit('cancel');\n    } else {\n            that.statusMessage.status_list = [{goal_id : goalMessage.goal_id, status : 1}];\n            that.currentGoal = goalMessage;\n            that.emit('goal', goalMessage.goal);\n    }\n    });\n\n    // helper function for determing ordering of timestamps\n    // returns t1 < t2\n    var isEarlier = function(t1, t2) {\n        if(t1.secs > t2.secs) {\n            return false;\n        } else if(t1.secs < t2.secs) {\n            return true;\n        } else if(t1.nsecs < t2.nsecs) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // TODO: this may be more complicated than necessary, since I'm\n    // not sure if the callbacks can ever wind up with a scenario\n    // where we've been preempted by a next goal, it hasn't finished\n    // processing, and then we get a cancel message\n    cancelListener.subscribe(function(cancelMessage) {\n\n        // cancel ALL goals if both empty\n        if(cancelMessage.stamp.secs === 0 && cancelMessage.stamp.secs === 0 && cancelMessage.id === '') {\n            that.nextGoal = null;\n            if(that.currentGoal) {\n                that.emit('cancel');\n            }\n        } else { // treat id and stamp independently\n            if(that.currentGoal && cancelMessage.id === that.currentGoal.goal_id.id) {\n                that.emit('cancel');\n            } else if(that.nextGoal && cancelMessage.id === that.nextGoal.goal_id.id) {\n                that.nextGoal = null;\n            }\n\n            if(that.nextGoal && isEarlier(that.nextGoal.goal_id.stamp,\n                                          cancelMessage.stamp)) {\n                that.nextGoal = null;\n            }\n            if(that.currentGoal && isEarlier(that.currentGoal.goal_id.stamp,\n                                             cancelMessage.stamp)) {\n                \n                that.emit('cancel');\n            }\n        }\n    });\n\n    // publish status at pseudo-fixed rate; required for clients to know they've connected\n    var statusInterval = setInterval( function() {\n        var currentTime = new Date();\n        var secs = Math.floor(currentTime.getTime()/1000);\n        var nsecs = Math.round(1000000000*(currentTime.getTime()/1000-secs));\n        that.statusMessage.header.stamp.secs = secs;\n        that.statusMessage.header.stamp.nsecs = nsecs;\n        statusPublisher.publish(that.statusMessage);\n    }, 500); // publish every 500ms\n\n}\n\nSimpleActionServer.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n*  Set action state to succeeded and return to client\n*/\n\nSimpleActionServer.prototype.setSucceeded = function(result2) {\n    \n\n    var resultMessage = new Message({\n        status : {goal_id : this.currentGoal.goal_id, status : 3},\n        result : result2\n    });\n    this.resultPublisher.publish(resultMessage);\n\n    this.statusMessage.status_list = [];\n    if(this.nextGoal) {\n        this.currentGoal = this.nextGoal;\n        this.nextGoal = null;\n        this.emit('goal', this.currentGoal.goal);\n    } else {\n        this.currentGoal = null;\n    }\n};\n\n/**\n*  Function to send feedback\n*/\n\nSimpleActionServer.prototype.sendFeedback = function(feedback2) {\n\n    var feedbackMessage = new Message({\n        status : {goal_id : this.currentGoal.goal_id, status : 1},\n        feedback : feedback2\n    });\n    this.feedbackPublisher.publish(feedbackMessage);\n};\n\n/**\n*  Handle case where client requests preemption\n*/\n\nSimpleActionServer.prototype.setPreempted = function() {\n\n    this.statusMessage.status_list = [];\n    var resultMessage = new Message({\n        status : {goal_id : this.currentGoal.goal_id, status : 2},\n    });\n    this.resultPublisher.publish(resultMessage);\n\n    if(this.nextGoal) {\n        this.currentGoal = this.nextGoal;\n        this.nextGoal = null;\n        this.emit('goal', this.currentGoal.goal);\n    } else {\n        this.currentGoal = null;\n    }\n};\n\nmodule.exports = SimpleActionServer;","var Ros = require('../core/Ros');\nvar mixin = require('../mixin');\n\nvar action = module.exports = {\n    ActionClient: require('./ActionClient'),\n    ActionListener: require('./ActionListener'),\n    Goal: require('./Goal'),\n    SimpleActionServer: require('./SimpleActionServer')\n};\n\nmixin(Ros, ['ActionClient', 'SimpleActionServer'], action);\n","/**\n * @fileoverview\n * @author Brandon Alexander - baalexander@gmail.com\n */\n\nvar assign = require('object-assign');\n\n/**\n * Message objects are used for publishing and subscribing to and from topics.\n *\n * @constructor\n * @param values - object matching the fields defined in the .msg definition file\n */\nfunction Message(values) {\n  assign(this, values);\n}\n\nmodule.exports = Message;","/**\n * @fileoverview\n * @author Brandon Alexander - baalexander@gmail.com\n */\n\nvar Service = require('./Service');\nvar ServiceRequest = require('./ServiceRequest');\n\n/**\n * A ROS parameter.\n *\n * @constructor\n * @param options - possible keys include:\n *   * ros - the ROSLIB.Ros connection handle\n *   * name - the param name, like max_vel_x\n */\nfunction Param(options) {\n  options = options || {};\n  this.ros = options.ros;\n  this.name = options.name;\n}\n\n/**\n * Fetches the value of the param.\n *\n * @param callback - function with the following params:\n *  * value - the value of the param from ROS.\n */\nParam.prototype.get = function(callback) {\n  var paramClient = new Service({\n    ros : this.ros,\n    name : '/rosapi/get_param',\n    serviceType : 'rosapi/GetParam'\n  });\n\n  var request = new ServiceRequest({\n    name : this.name\n  });\n\n  paramClient.callService(request, function(result) {\n    var value = JSON.parse(result.value);\n    callback(value);\n  });\n};\n\n/**\n * Sets the value of the param in ROS.\n *\n * @param value - value to set param to.\n */\nParam.prototype.set = function(value, callback) {\n  var paramClient = new Service({\n    ros : this.ros,\n    name : '/rosapi/set_param',\n    serviceType : 'rosapi/SetParam'\n  });\n\n  var request = new ServiceRequest({\n    name : this.name,\n    value : JSON.stringify(value)\n  });\n\n  paramClient.callService(request, callback);\n};\n\n/**\n * Delete this parameter on the ROS server.\n */\nParam.prototype.delete = function(callback) {\n  var paramClient = new Service({\n    ros : this.ros,\n    name : '/rosapi/delete_param',\n    serviceType : 'rosapi/DeleteParam'\n  });\n\n  var request = new ServiceRequest({\n    name : this.name\n  });\n\n  paramClient.callService(request, callback);\n};\n\nmodule.exports = Param;","/**\n * @fileoverview\n * @author Brandon Alexander - baalexander@gmail.com\n */\n\nvar WebSocket = require('ws');\nvar WorkerSocket = require('../util/workerSocket');\nvar socketAdapter = require('./SocketAdapter.js');\n\nvar Service = require('./Service');\nvar ServiceRequest = require('./ServiceRequest');\n\nvar assign = require('object-assign');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * Manages connection to the server and all interactions with ROS.\n *\n * Emits the following events:\n *  * 'error' - there was an error with ROS\n *  * 'connection' - connected to the WebSocket server\n *  * 'close' - disconnected to the WebSocket server\n *  * <topicName> - a message came from rosbridge with the given topic name\n *  * <serviceID> - a service response came from rosbridge with the given ID\n *\n * @constructor\n * @param options - possible keys include: <br>\n *   * url (optional) - (can be specified later with `connect`) the WebSocket URL for rosbridge or the node server url to connect using socket.io (if socket.io exists in the page) <br>\n *   * groovyCompatibility - don't use interfaces that changed after the last groovy release or rosbridge_suite and related tools (defaults to true)\n *   * transportLibrary (optional) - one of 'websocket', 'workersocket' (default), 'socket.io' or RTCPeerConnection instance controlling how the connection is created in `connect`.\n *   * transportOptions (optional) - the options to use use when creating a connection. Currently only used if `transportLibrary` is RTCPeerConnection.\n */\nfunction Ros(options) {\n  options = options || {};\n  this.socket = null;\n  this.idCounter = 0;\n  this.isConnected = false;\n  this.transportLibrary = options.transportLibrary || 'websocket';\n  this.transportOptions = options.transportOptions || {};\n\n  if (typeof options.groovyCompatibility === 'undefined') {\n    this.groovyCompatibility = true;\n  }\n  else {\n    this.groovyCompatibility = options.groovyCompatibility;\n  }\n\n  // Sets unlimited event listeners.\n  this.setMaxListeners(0);\n\n  // begin by checking if a URL was given\n  if (options.url) {\n    this.connect(options.url);\n  }\n}\n\nRos.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n * Connect to the specified WebSocket.\n *\n * @param url - WebSocket URL or RTCDataChannel label for Rosbridge\n */\nRos.prototype.connect = function(url) {\n  if (this.transportLibrary === 'socket.io') {\n    this.socket = assign(io(url, {'force new connection': true}), socketAdapter(this));\n    this.socket.on('connect', this.socket.onopen);\n    this.socket.on('data', this.socket.onmessage);\n    this.socket.on('close', this.socket.onclose);\n    this.socket.on('error', this.socket.onerror);\n  } else if (this.transportLibrary.constructor.name === 'RTCPeerConnection') {\n    this.socket = assign(this.transportLibrary.createDataChannel(url, this.transportOptions), socketAdapter(this));\n  } else if (this.transportLibrary === 'websocket') {\n    if (!this.socket || this.socket.readyState === WebSocket.CLOSED) {\n      var sock = new WebSocket(url);\n      sock.binaryType = 'arraybuffer';\n      this.socket = assign(sock, socketAdapter(this));\n    }\n  } else if (this.transportLibrary === 'workersocket') {\n    this.socket = assign(new WorkerSocket(url), socketAdapter(this));\n  } else {\n    throw 'Unknown transportLibrary: ' + this.transportLibrary.toString();\n  }\n\n};\n\n/**\n * Disconnect from the WebSocket server.\n */\nRos.prototype.close = function() {\n  if (this.socket) {\n    this.socket.close();\n  }\n};\n\n/**\n * Sends an authorization request to the server.\n *\n * @param mac - MAC (hash) string given by the trusted source.\n * @param client - IP of the client.\n * @param dest - IP of the destination.\n * @param rand - Random string given by the trusted source.\n * @param t - Time of the authorization request.\n * @param level - User level as a string given by the client.\n * @param end - End time of the client's session.\n */\nRos.prototype.authenticate = function(mac, client, dest, rand, t, level, end) {\n  // create the request\n  var auth = {\n    op : 'auth',\n    mac : mac,\n    client : client,\n    dest : dest,\n    rand : rand,\n    t : t,\n    level : level,\n    end : end\n  };\n  // send the request\n  this.callOnConnection(auth);\n};\n\n/**\n * Sends the message over the WebSocket, but queues the message up if not yet\n * connected.\n */\nRos.prototype.callOnConnection = function(message) {\n  var that = this;\n  var messageJson = JSON.stringify(message);\n  var emitter = null;\n  if (this.transportLibrary === 'socket.io') {\n    emitter = function(msg){that.socket.emit('operation', msg);};\n  } else {\n    emitter = function(msg){that.socket.send(msg);};\n  }\n\n  if (!this.isConnected) {\n    that.once('connection', function() {\n      emitter(messageJson);\n    });\n  } else {\n    emitter(messageJson);\n  }\n};\n\n/**\n * Sends a set_level request to the server\n *\n * @param level - Status level (none, error, warning, info)\n * @param id - Optional: Operation ID to change status level on\n */\nRos.prototype.setStatusLevel = function(level, id){\n  var levelMsg = {\n    op: 'set_level',\n    level: level,\n    id: id\n  };\n\n  this.callOnConnection(levelMsg);\n};\n\n/**\n * Retrieves Action Servers in ROS as an array of string\n *\n * @param callback function with params:\n *   * actionservers - Array of action server names\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getActionServers = function(callback, failedCallback) {\n  var getActionServers = new Service({\n    ros : this,\n    name : '/rosapi/action_servers',\n    serviceType : 'rosapi/GetActionServers'\n  });\n\n  var request = new ServiceRequest({});\n  if (typeof failedCallback === 'function'){\n    getActionServers.callService(request,\n      function(result) {\n        callback(result.action_servers);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    getActionServers.callService(request, function(result) {\n      callback(result.action_servers);\n    });\n  }\n};\n\n/**\n * Retrieves list of topics in ROS as an array.\n *\n * @param callback function with params:\n *   * topics - Array of topic names\n *   * types - Array of message type names\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getTopics = function(callback, failedCallback) {\n  var topicsClient = new Service({\n    ros : this,\n    name : '/rosapi/topics',\n    serviceType : 'rosapi/Topics'\n  });\n\n  var request = new ServiceRequest();\n  if (typeof failedCallback === 'function'){\n    topicsClient.callService(request,\n      function(result) {\n        callback(result);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    topicsClient.callService(request, function(result) {\n      callback(result);\n    });\n  }\n};\n\n/**\n * Retrieves Topics in ROS as an array as specific type\n *\n * @param topicType topic type to find\n * @param callback function with params:\n *   * topics - Array of topic names\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getTopicsForType = function(topicType, callback, failedCallback) {\n  var topicsForTypeClient = new Service({\n    ros : this,\n    name : '/rosapi/topics_for_type',\n    serviceType : 'rosapi/TopicsForType'\n  });\n\n  var request = new ServiceRequest({\n    type: topicType\n  });\n  if (typeof failedCallback === 'function'){\n    topicsForTypeClient.callService(request,\n      function(result) {\n        callback(result.topics);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    topicsForTypeClient.callService(request, function(result) {\n      callback(result.topics);\n    });\n  }\n};\n\n/**\n * Retrieves list of active service names in ROS.\n *\n * @param callback - function with the following params:\n *   * services - array of service names\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getServices = function(callback, failedCallback) {\n  var servicesClient = new Service({\n    ros : this,\n    name : '/rosapi/services',\n    serviceType : 'rosapi/Services'\n  });\n\n  var request = new ServiceRequest();\n  if (typeof failedCallback === 'function'){\n    servicesClient.callService(request,\n      function(result) {\n        callback(result.services);\n      },\n      function(message) {\n        failedCallback(message);\n      }\n    );\n  }else{\n    servicesClient.callService(request, function(result) {\n      callback(result.services);\n    });\n  }\n};\n\n/**\n * Retrieves list of services in ROS as an array as specific type\n *\n * @param serviceType service type to find\n * @param callback function with params:\n *   * topics - Array of service names\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getServicesForType = function(serviceType, callback, failedCallback) {\n  var servicesForTypeClient = new Service({\n    ros : this,\n    name : '/rosapi/services_for_type',\n    serviceType : 'rosapi/ServicesForType'\n  });\n\n  var request = new ServiceRequest({\n    type: serviceType\n  });\n  if (typeof failedCallback === 'function'){\n    servicesForTypeClient.callService(request,\n      function(result) {\n        callback(result.services);\n      },\n      function(message) {\n        failedCallback(message);\n      }\n    );\n  }else{\n    servicesForTypeClient.callService(request, function(result) {\n      callback(result.services);\n    });\n  }\n};\n\n/**\n * Retrieves a detail of ROS service request.\n *\n * @param service name of service:\n * @param callback - function with params:\n *   * type - String of the service type\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getServiceRequestDetails = function(type, callback, failedCallback) {\n  var serviceTypeClient = new Service({\n    ros : this,\n    name : '/rosapi/service_request_details',\n    serviceType : 'rosapi/ServiceRequestDetails'\n  });\n  var request = new ServiceRequest({\n    type: type\n  });\n\n  if (typeof failedCallback === 'function'){\n    serviceTypeClient.callService(request,\n      function(result) {\n        callback(result);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    serviceTypeClient.callService(request, function(result) {\n      callback(result);\n    });\n  }\n};\n\n/**\n * Retrieves a detail of ROS service request.\n *\n * @param service name of service\n * @param callback - function with params:\n *   * type - String of the service type\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getServiceResponseDetails = function(type, callback, failedCallback) {\n  var serviceTypeClient = new Service({\n    ros : this,\n    name : '/rosapi/service_response_details',\n    serviceType : 'rosapi/ServiceResponseDetails'\n  });\n  var request = new ServiceRequest({\n    type: type\n  });\n\n  if (typeof failedCallback === 'function'){\n    serviceTypeClient.callService(request,\n      function(result) {\n        callback(result);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    serviceTypeClient.callService(request, function(result) {\n      callback(result);\n    });\n  }\n};\n\n/**\n * Retrieves list of active node names in ROS.\n *\n * @param callback - function with the following params:\n *   * nodes - array of node names\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getNodes = function(callback, failedCallback) {\n  var nodesClient = new Service({\n    ros : this,\n    name : '/rosapi/nodes',\n    serviceType : 'rosapi/Nodes'\n  });\n\n  var request = new ServiceRequest();\n  if (typeof failedCallback === 'function'){\n    nodesClient.callService(request,\n      function(result) {\n        callback(result.nodes);\n      },\n      function(message) {\n        failedCallback(message);\n      }\n    );\n  }else{\n    nodesClient.callService(request, function(result) {\n      callback(result.nodes);\n    });\n  }\n};\n\n/**\n  * Retrieves list subscribed topics, publishing topics and services of a specific node\n  *\n  * @param node name of the node:\n  * @param callback - function with params:\n  *   * publications - array of published topic names\n  *   * subscriptions - array of subscribed topic names\n  *   * services - array of service names hosted\n  * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n  */\nRos.prototype.getNodeDetails = function(node, callback, failedCallback) {\n  var nodesClient = new Service({\n    ros : this,\n    name : '/rosapi/node_details',\n    serviceType : 'rosapi/NodeDetails'\n  });\n\n  var request = new ServiceRequest({\n    node: node\n  });\n  if (typeof failedCallback === 'function'){\n    nodesClient.callService(request,\n      function(result) {\n        callback(result.subscribing, result.publishing, result.services);\n      },\n      function(message) {\n        failedCallback(message);\n      }\n    );\n  } else {\n    nodesClient.callService(request, function(result) {\n      callback(result);\n    });\n  }\n};\n\n/**\n * Retrieves list of param names from the ROS Parameter Server.\n *\n * @param callback function with params:\n *  * params - array of param names.\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getParams = function(callback, failedCallback) {\n  var paramsClient = new Service({\n    ros : this,\n    name : '/rosapi/get_param_names',\n    serviceType : 'rosapi/GetParamNames'\n  });\n  var request = new ServiceRequest();\n  if (typeof failedCallback === 'function'){\n    paramsClient.callService(request,\n      function(result) {\n        callback(result.names);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    paramsClient.callService(request, function(result) {\n      callback(result.names);\n    });\n  }\n};\n\n/**\n * Retrieves a type of ROS topic.\n *\n * @param topic name of the topic:\n * @param callback - function with params:\n *   * type - String of the topic type\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getTopicType = function(topic, callback, failedCallback) {\n  var topicTypeClient = new Service({\n    ros : this,\n    name : '/rosapi/topic_type',\n    serviceType : 'rosapi/TopicType'\n  });\n  var request = new ServiceRequest({\n    topic: topic\n  });\n\n  if (typeof failedCallback === 'function'){\n    topicTypeClient.callService(request,\n      function(result) {\n        callback(result.type);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    topicTypeClient.callService(request, function(result) {\n      callback(result.type);\n    });\n  }\n};\n\n/**\n * Retrieves a type of ROS service.\n *\n * @param service name of service:\n * @param callback - function with params:\n *   * type - String of the service type\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getServiceType = function(service, callback, failedCallback) {\n  var serviceTypeClient = new Service({\n    ros : this,\n    name : '/rosapi/service_type',\n    serviceType : 'rosapi/ServiceType'\n  });\n  var request = new ServiceRequest({\n    service: service\n  });\n\n  if (typeof failedCallback === 'function'){\n    serviceTypeClient.callService(request,\n      function(result) {\n        callback(result.type);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    serviceTypeClient.callService(request, function(result) {\n      callback(result.type);\n    });\n  }\n};\n\n/**\n * Retrieves a detail of ROS message.\n *\n * @param message - String of a topic type\n * @param callback - function with params:\n *   * details - Array of the message detail\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nRos.prototype.getMessageDetails = function(message, callback, failedCallback) {\n  var messageDetailClient = new Service({\n    ros : this,\n    name : '/rosapi/message_details',\n    serviceType : 'rosapi/MessageDetails'\n  });\n  var request = new ServiceRequest({\n    type: message\n  });\n\n  if (typeof failedCallback === 'function'){\n    messageDetailClient.callService(request,\n      function(result) {\n        callback(result.typedefs);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    messageDetailClient.callService(request, function(result) {\n      callback(result.typedefs);\n    });\n  }\n};\n\n/**\n * Decode a typedefs into a dictionary like `rosmsg show foo/bar`\n *\n * @param defs - array of type_def dictionary\n */\nRos.prototype.decodeTypeDefs = function(defs) {\n  var that = this;\n\n  // calls itself recursively to resolve type definition using hints.\n  var decodeTypeDefsRec = function(theType, hints) {\n    var typeDefDict = {};\n    for (var i = 0; i < theType.fieldnames.length; i++) {\n      var arrayLen = theType.fieldarraylen[i];\n      var fieldName = theType.fieldnames[i];\n      var fieldType = theType.fieldtypes[i];\n      if (fieldType.indexOf('/') === -1) { // check the fieldType includes '/' or not\n        if (arrayLen === -1) {\n          typeDefDict[fieldName] = fieldType;\n        }\n        else {\n          typeDefDict[fieldName] = [fieldType];\n        }\n      }\n      else {\n        // lookup the name\n        var sub = false;\n        for (var j = 0; j < hints.length; j++) {\n          if (hints[j].type.toString() === fieldType.toString()) {\n            sub = hints[j];\n            break;\n          }\n        }\n        if (sub) {\n          var subResult = decodeTypeDefsRec(sub, hints);\n          if (arrayLen === -1) {\n          }\n          else {\n            typeDefDict[fieldName] = [subResult];\n          }\n        }\n        else {\n          that.emit('error', 'Cannot find ' + fieldType + ' in decodeTypeDefs');\n        }\n      }\n    }\n    return typeDefDict;\n  };\n\n  return decodeTypeDefsRec(defs[0], defs);\n};\n\n/**\n * Retrieves list of topics and their associated type definitions.\n *\n * @param callback function with params:\n *   * topics - Array of topic names\n *   * types - Array of message type names\n *   * typedefs_full_text - Array of full definitions of message types, similar to `gendeps --cat`\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n *\n */\nRos.prototype.getTopicsAndRawTypes = function(callback, failedCallback) {\n  var topicsAndRawTypesClient = new Service({\n    ros : this,\n    name : '/rosapi/topics_and_raw_types',\n    serviceType : 'rosapi/TopicsAndRawTypes'\n  });\n\n  var request = new ServiceRequest();\n  if (typeof failedCallback === 'function'){\n    topicsAndRawTypesClient.callService(request,\n      function(result) {\n        callback(result);\n      },\n      function(message){\n        failedCallback(message);\n      }\n    );\n  }else{\n    topicsAndRawTypesClient.callService(request, function(result) {\n      callback(result);\n    });\n  }\n};\n\n\nmodule.exports = Ros;\n","/**\n * @fileoverview\n * @author Brandon Alexander - baalexander@gmail.com\n */\n\nvar ServiceResponse = require('./ServiceResponse');\nvar ServiceRequest = require('./ServiceRequest');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * A ROS service client.\n *\n * @constructor\n * @params options - possible keys include:\n *   * ros - the ROSLIB.Ros connection handle\n *   * name - the service name, like /add_two_ints\n *   * serviceType - the service type, like 'rospy_tutorials/AddTwoInts'\n */\nfunction Service(options) {\n  options = options || {};\n  this.ros = options.ros;\n  this.name = options.name;\n  this.serviceType = options.serviceType;\n  this.isAdvertised = false;\n\n  this._serviceCallback = null;\n}\nService.prototype.__proto__ = EventEmitter2.prototype;\n/**\n * Calls the service. Returns the service response in the\n * callback. Does nothing if this service is currently advertised.\n *\n * @param request - the ROSLIB.ServiceRequest to send\n * @param callback - function with params:\n *   * response - the response from the service request\n * @param failedCallback - the callback function when the service call failed (optional). Params:\n *   * error - the error message reported by ROS\n */\nService.prototype.callService = function(request, callback, failedCallback) {\n  if (this.isAdvertised) {\n    return;\n  }\n\n  var serviceCallId = 'call_service:' + this.name + ':' + (++this.ros.idCounter);\n\n  if (callback || failedCallback) {\n    this.ros.once(serviceCallId, function(message) {\n      if (message.result !== undefined && message.result === false) {\n        if (typeof failedCallback === 'function') {\n          failedCallback(message.values);\n        }\n      } else if (typeof callback === 'function') {\n        callback(new ServiceResponse(message.values));\n      }\n    });\n  }\n\n  var call = {\n    op : 'call_service',\n    id : serviceCallId,\n    service : this.name,\n    type: this.serviceType,\n    args : request\n  };\n  this.ros.callOnConnection(call);\n};\n\n/**\n * Advertise the service. This turns the Service object from a client\n * into a server. The callback will be called with every request\n * that's made on this service.\n *\n * @param callback - This works similarly to the callback for a C++ service and should take the following params:\n *   * request - the service request\n *   * response - an empty dictionary. Take care not to overwrite this. Instead, only modify the values within.\n *   It should return true if the service has finished successfully,\n *   i.e. without any fatal errors.\n */\nService.prototype.advertise = function(callback) {\n  if (this.isAdvertised || typeof callback !== 'function') {\n    return;\n  }\n\n  this._serviceCallback = callback;\n  this.ros.on(this.name, this._serviceResponse.bind(this));\n  this.ros.callOnConnection({\n    op: 'advertise_service',\n    type: this.serviceType,\n    service: this.name\n  });\n  this.isAdvertised = true;\n};\n\nService.prototype.unadvertise = function() {\n  if (!this.isAdvertised) {\n    return;\n  }\n  this.ros.callOnConnection({\n    op: 'unadvertise_service',\n    service: this.name\n  });\n  this.isAdvertised = false;\n};\n\nService.prototype._serviceResponse = function(rosbridgeRequest) {\n  var response = {};\n  var success = this._serviceCallback(rosbridgeRequest.args, response);\n\n  var call = {\n    op: 'service_response',\n    service: this.name,\n    values: new ServiceResponse(response),\n    result: success\n  };\n\n  if (rosbridgeRequest.id) {\n    call.id = rosbridgeRequest.id;\n  }\n\n  this.ros.callOnConnection(call);\n};\n\nmodule.exports = Service;\n","/**\n * @fileoverview\n * @author Brandon Alexander - balexander@willowgarage.com\n */\n\nvar assign = require('object-assign');\n\n/**\n * A ServiceRequest is passed into the service call.\n *\n * @constructor\n * @param values - object matching the fields defined in the .srv definition file\n */\nfunction ServiceRequest(values) {\n  assign(this, values);\n}\n\nmodule.exports = ServiceRequest;","/**\n * @fileoverview\n * @author Brandon Alexander - balexander@willowgarage.com\n */\n\nvar assign = require('object-assign');\n\n/**\n * A ServiceResponse is returned from the service call.\n *\n * @constructor\n * @param values - object matching the fields defined in the .srv definition file\n */\nfunction ServiceResponse(values) {\n  assign(this, values);\n}\n\nmodule.exports = ServiceResponse;","/**\n * Socket event handling utilities for handling events on either\n * WebSocket and TCP sockets\n *\n * Note to anyone reviewing this code: these functions are called\n * in the context of their parent object, unless bound\n * @fileOverview\n */\n'use strict';\n\nvar decompressPng = require('../util/decompressPng');\nvar CBOR = require('cbor-js');\nvar typedArrayTagger = require('../util/cborTypedArrayTags');\nvar BSON = null;\nif(typeof bson !== 'undefined'){\n    BSON = bson().BSON;\n}\n\n/**\n * Events listeners for a WebSocket or TCP socket to a JavaScript\n * ROS Client. Sets up Messages for a given topic to trigger an\n * event on the ROS client.\n *\n * @namespace SocketAdapter\n * @private\n */\nfunction SocketAdapter(client) {\n  function handleMessage(message) {\n    if (message.op === 'publish') {\n      client.emit(message.topic, message.msg);\n    } else if (message.op === 'service_response') {\n      client.emit(message.id, message);\n    } else if (message.op === 'call_service') {\n      client.emit(message.service, message);\n    } else if(message.op === 'status'){\n      if(message.id){\n        client.emit('status:'+message.id, message);\n      } else {\n        client.emit('status', message);\n      }\n    }\n  }\n\n  function handlePng(message, callback) {\n    if (message.op === 'png') {\n      decompressPng(message.data, callback);\n    } else {\n      callback(message);\n    }\n  }\n\n  function decodeBSON(data, callback) {\n    if (!BSON) {\n      throw 'Cannot process BSON encoded message without BSON header.';\n    }\n    var reader = new FileReader();\n    reader.onload  = function() {\n      var uint8Array = new Uint8Array(this.result);\n      var msg = BSON.deserialize(uint8Array);\n      callback(msg);\n    };\n    reader.readAsArrayBuffer(data);\n  }\n\n  return {\n    /**\n     * Emits a 'connection' event on WebSocket connection.\n     *\n     * @param event - the argument to emit with the event.\n     * @memberof SocketAdapter\n     */\n    onopen: function onOpen(event) {\n      client.isConnected = true;\n      client.emit('connection', event);\n    },\n\n    /**\n     * Emits a 'close' event on WebSocket disconnection.\n     *\n     * @param event - the argument to emit with the event.\n     * @memberof SocketAdapter\n     */\n    onclose: function onClose(event) {\n      client.isConnected = false;\n      client.emit('close', event);\n    },\n\n    /**\n     * Emits an 'error' event whenever there was an error.\n     *\n     * @param event - the argument to emit with the event.\n     * @memberof SocketAdapter\n     */\n    onerror: function onError(event) {\n      client.emit('error', event);\n    },\n\n    /**\n     * Parses message responses from rosbridge and sends to the appropriate\n     * topic, service, or param.\n     *\n     * @param message - the raw JSON message from rosbridge.\n     * @memberof SocketAdapter\n     */\n    onmessage: function onMessage(data) {\n      if (typeof Blob !== 'undefined' && data.data instanceof Blob) {\n        decodeBSON(data.data, function (message) {\n          handlePng(message, handleMessage);\n        });\n      } else if (data.data instanceof ArrayBuffer) {\n        var decoded = CBOR.decode(data.data, typedArrayTagger);\n        handleMessage(decoded);\n      } else {\n        var message = JSON.parse(typeof data === 'string' ? data : data.data);\n        handlePng(message, handleMessage);\n      }\n    }\n  };\n}\n\nmodule.exports = SocketAdapter;\n","/**\n * @fileoverview\n * @author Brandon Alexander - baalexander@gmail.com\n */\n\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\nvar Message = require('./Message');\n\n/**\n * Publish and/or subscribe to a topic in ROS.\n *\n * Emits the following events:\n *  * 'warning' - if there are any warning during the Topic creation\n *  * 'message' - the message data from rosbridge\n *\n * @constructor\n * @param options - object with following keys:\n *   * ros - the ROSLIB.Ros connection handle\n *   * name - the topic name, like /cmd_vel\n *   * messageType - the message type, like 'std_msgs/String'\n *   * compression - the type of compression to use, like 'png', 'cbor', or 'cbor-raw'\n *   * throttle_rate - the rate (in ms in between messages) at which to throttle the topics\n *   * queue_size - the queue created at bridge side for re-publishing webtopics (defaults to 100)\n *   * latch - latch the topic when publishing\n *   * queue_length - the queue length at bridge side used when subscribing (defaults to 0, no queueing).\n *   * reconnect_on_close - the flag to enable resubscription and readvertisement on close event(defaults to true).\n */\nfunction Topic(options) {\n  options = options || {};\n  this.ros = options.ros;\n  this.name = options.name;\n  this.messageType = options.messageType;\n  this.isAdvertised = false;\n  this.compression = options.compression || 'none';\n  this.throttle_rate = options.throttle_rate || 0;\n  this.latch = options.latch || false;\n  this.queue_size = options.queue_size || 100;\n  this.queue_length = options.queue_length || 0;\n  this.reconnect_on_close = options.reconnect_on_close !== undefined ? options.reconnect_on_close : true;\n\n  // Check for valid compression types\n  if (this.compression && this.compression !== 'png' &&\n    this.compression !== 'cbor' && this.compression !== 'cbor-raw' &&\n    this.compression !== 'none') {\n    this.emit('warning', this.compression +\n      ' compression is not supported. No compression will be used.');\n    this.compression = 'none';\n  }\n\n  // Check if throttle rate is negative\n  if (this.throttle_rate < 0) {\n    this.emit('warning', this.throttle_rate + ' is not allowed. Set to 0');\n    this.throttle_rate = 0;\n  }\n\n  var that = this;\n  if (this.reconnect_on_close) {\n    this.callForSubscribeAndAdvertise = function(message) {\n      that.ros.callOnConnection(message);\n\n      that.waitForReconnect = false;\n      that.reconnectFunc = function() {\n        if(!that.waitForReconnect) {\n          that.waitForReconnect = true;\n          that.ros.callOnConnection(message);\n          that.ros.once('connection', function() {\n            that.waitForReconnect = false;\n          });\n        }\n      };\n      that.ros.on('close', that.reconnectFunc);\n    };\n  }\n  else {\n    this.callForSubscribeAndAdvertise = this.ros.callOnConnection;\n  }\n\n  this._messageCallback = function(data) {\n    that.emit('message', new Message(data));\n  };\n}\nTopic.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n * Every time a message is published for the given topic, the callback\n * will be called with the message object.\n *\n * @param callback - function with the following params:\n *   * message - the published message\n */\nTopic.prototype.subscribe = function(callback) {\n  if (typeof callback === 'function') {\n    this.on('message', callback);\n  }\n\n  if (this.subscribeId) { return; }\n  this.ros.on(this.name, this._messageCallback);\n  this.subscribeId = 'subscribe:' + this.name + ':' + (++this.ros.idCounter);\n\n  this.callForSubscribeAndAdvertise({\n    op: 'subscribe',\n    id: this.subscribeId,\n    type: this.messageType,\n    topic: this.name,\n    compression: this.compression,\n    throttle_rate: this.throttle_rate,\n    queue_length: this.queue_length\n  });\n};\n\n/**\n * Unregisters as a subscriber for the topic. Unsubscribing stop remove\n * all subscribe callbacks. To remove a call back, you must explicitly\n * pass the callback function in.\n *\n * @param callback - the optional callback to unregister, if\n *     * provided and other listeners are registered the topic won't\n *     * unsubscribe, just stop emitting to the passed listener\n */\nTopic.prototype.unsubscribe = function(callback) {\n  if (callback) {\n    this.off('message', callback);\n    // If there is any other callbacks still subscribed don't unsubscribe\n    if (this.listeners('message').length) { return; }\n  }\n  if (!this.subscribeId) { return; }\n  // Note: Don't call this.removeAllListeners, allow client to handle that themselves\n  this.ros.off(this.name, this._messageCallback);\n  if(this.reconnect_on_close) {\n    this.ros.off('close', this.reconnectFunc);\n  }\n  this.emit('unsubscribe');\n  this.ros.callOnConnection({\n    op: 'unsubscribe',\n    id: this.subscribeId,\n    topic: this.name\n  });\n  this.subscribeId = null;\n};\n\n\n/**\n * Registers as a publisher for the topic.\n */\nTopic.prototype.advertise = function() {\n  if (this.isAdvertised) {\n    return;\n  }\n  this.advertiseId = 'advertise:' + this.name + ':' + (++this.ros.idCounter);\n  this.callForSubscribeAndAdvertise({\n    op: 'advertise',\n    id: this.advertiseId,\n    type: this.messageType,\n    topic: this.name,\n    latch: this.latch,\n    queue_size: this.queue_size\n  });\n  this.isAdvertised = true;\n\n  if(!this.reconnect_on_close) {\n    var that = this;\n    this.ros.on('close', function() {\n      that.isAdvertised = false;\n    });\n  }\n};\n\n/**\n * Unregisters as a publisher for the topic.\n */\nTopic.prototype.unadvertise = function() {\n  if (!this.isAdvertised) {\n    return;\n  }\n  if(this.reconnect_on_close) {\n    this.ros.off('close', this.reconnectFunc);\n  }\n  this.emit('unadvertise');\n  this.ros.callOnConnection({\n    op: 'unadvertise',\n    id: this.advertiseId,\n    topic: this.name\n  });\n  this.isAdvertised = false;\n};\n\n/**\n * Publish the message.\n *\n * @param message - A ROSLIB.Message object.\n */\nTopic.prototype.publish = function(message) {\n  if (!this.isAdvertised) {\n    this.advertise();\n  }\n\n  this.ros.idCounter++;\n  var call = {\n    op: 'publish',\n    id: 'publish:' + this.name + ':' + this.ros.idCounter,\n    topic: this.name,\n    msg: message,\n    latch: this.latch\n  };\n  this.ros.callOnConnection(call);\n};\n\nmodule.exports = Topic;\n","var mixin = require('../mixin');\n\nvar core = module.exports = {\n    Ros: require('./Ros'),\n    Topic: require('./Topic'),\n    Message: require('./Message'),\n    Param: require('./Param'),\n    Service: require('./Service'),\n    ServiceRequest: require('./ServiceRequest'),\n    ServiceResponse: require('./ServiceResponse')\n};\n\nmixin(core.Ros, ['Param', 'Service', 'Topic'], core);\n","/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\nvar Vector3 = require('./Vector3');\nvar Quaternion = require('./Quaternion');\n\n/**\n * A Pose in 3D space. Values are copied into this object.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * position - the Vector3 describing the position\n *   * orientation - the ROSLIB.Quaternion describing the orientation\n */\nfunction Pose(options) {\n  options = options || {};\n  // copy the values into this object if they exist\n  this.position = new Vector3(options.position);\n  this.orientation = new Quaternion(options.orientation);\n}\n\n/**\n * Apply a transform against this pose.\n *\n * @param tf the transform\n */\nPose.prototype.applyTransform = function(tf) {\n  this.position.multiplyQuaternion(tf.rotation);\n  this.position.add(tf.translation);\n  var tmp = tf.rotation.clone();\n  tmp.multiply(this.orientation);\n  this.orientation = tmp;\n};\n\n/**\n * Clone a copy of this pose.\n *\n * @returns the cloned pose\n */\nPose.prototype.clone = function() {\n  return new Pose(this);\n};\n\n/**\n * Multiplies this pose with another pose without altering this pose.\n *\n * @returns Result of multiplication.\n */\nPose.prototype.multiply = function(pose) {\n  var p = pose.clone();\n  p.applyTransform({ rotation: this.orientation, translation: this.position });\n  return p;\n};\n\n/**\n * Computes the inverse of this pose.\n *\n * @returns Inverse of pose.\n */\nPose.prototype.getInverse = function() {\n  var inverse = this.clone();\n  inverse.orientation.invert();\n  inverse.position.multiplyQuaternion(inverse.orientation);\n  inverse.position.x *= -1;\n  inverse.position.y *= -1;\n  inverse.position.z *= -1;\n  return inverse;\n};\n\nmodule.exports = Pose;","/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\n/**\n * A Quaternion.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * x - the x value\n *   * y - the y value\n *   * z - the z value\n *   * w - the w value\n */\nfunction Quaternion(options) {\n  options = options || {};\n  this.x = options.x || 0;\n  this.y = options.y || 0;\n  this.z = options.z || 0;\n  this.w = (typeof options.w === 'number') ? options.w : 1;\n}\n\n/**\n * Perform a conjugation on this quaternion.\n */\nQuaternion.prototype.conjugate = function() {\n  this.x *= -1;\n  this.y *= -1;\n  this.z *= -1;\n};\n\n/**\n * Return the norm of this quaternion.\n */\nQuaternion.prototype.norm = function() {\n  return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n};\n\n/**\n * Perform a normalization on this quaternion.\n */\nQuaternion.prototype.normalize = function() {\n  var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  if (l === 0) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.w = 1;\n  } else {\n    l = 1 / l;\n    this.x = this.x * l;\n    this.y = this.y * l;\n    this.z = this.z * l;\n    this.w = this.w * l;\n  }\n};\n\n/**\n * Convert this quaternion into its inverse.\n */\nQuaternion.prototype.invert = function() {\n  this.conjugate();\n  this.normalize();\n};\n\n/**\n * Set the values of this quaternion to the product of itself and the given quaternion.\n *\n * @param q the quaternion to multiply with\n */\nQuaternion.prototype.multiply = function(q) {\n  var newX = this.x * q.w + this.y * q.z - this.z * q.y + this.w * q.x;\n  var newY = -this.x * q.z + this.y * q.w + this.z * q.x + this.w * q.y;\n  var newZ = this.x * q.y - this.y * q.x + this.z * q.w + this.w * q.z;\n  var newW = -this.x * q.x - this.y * q.y - this.z * q.z + this.w * q.w;\n  this.x = newX;\n  this.y = newY;\n  this.z = newZ;\n  this.w = newW;\n};\n\n/**\n * Clone a copy of this quaternion.\n *\n * @returns the cloned quaternion\n */\nQuaternion.prototype.clone = function() {\n  return new Quaternion(this);\n};\n\nmodule.exports = Quaternion;\n","/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\nvar Vector3 = require('./Vector3');\nvar Quaternion = require('./Quaternion');\n\n/**\n * A Transform in 3-space. Values are copied into this object.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * translation - the Vector3 describing the translation\n *   * rotation - the ROSLIB.Quaternion describing the rotation\n */\nfunction Transform(options) {\n  options = options || {};\n  // Copy the values into this object if they exist\n  this.translation = new Vector3(options.translation);\n  this.rotation = new Quaternion(options.rotation);\n}\n\n/**\n * Clone a copy of this transform.\n *\n * @returns the cloned transform\n */\nTransform.prototype.clone = function() {\n  return new Transform(this);\n};\n\nmodule.exports = Transform;","/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\n/**\n * A 3D vector.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * x - the x value\n *   * y - the y value\n *   * z - the z value\n */\nfunction Vector3(options) {\n  options = options || {};\n  this.x = options.x || 0;\n  this.y = options.y || 0;\n  this.z = options.z || 0;\n}\n\n/**\n * Set the values of this vector to the sum of itself and the given vector.\n *\n * @param v the vector to add with\n */\nVector3.prototype.add = function(v) {\n  this.x += v.x;\n  this.y += v.y;\n  this.z += v.z;\n};\n\n/**\n * Set the values of this vector to the difference of itself and the given vector.\n *\n * @param v the vector to subtract with\n */\nVector3.prototype.subtract = function(v) {\n  this.x -= v.x;\n  this.y -= v.y;\n  this.z -= v.z;\n};\n\n/**\n * Multiply the given Quaternion with this vector.\n *\n * @param q - the quaternion to multiply with\n */\nVector3.prototype.multiplyQuaternion = function(q) {\n  var ix = q.w * this.x + q.y * this.z - q.z * this.y;\n  var iy = q.w * this.y + q.z * this.x - q.x * this.z;\n  var iz = q.w * this.z + q.x * this.y - q.y * this.x;\n  var iw = -q.x * this.x - q.y * this.y - q.z * this.z;\n  this.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  this.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  this.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n};\n\n/**\n * Clone a copy of this vector.\n *\n * @returns the cloned vector\n */\nVector3.prototype.clone = function() {\n  return new Vector3(this);\n};\n\nmodule.exports = Vector3;","module.exports = {\n    Pose: require('./Pose'),\n    Quaternion: require('./Quaternion'),\n    Transform: require('./Transform'),\n    Vector3: require('./Vector3')\n};\n","/**\n * Mixin a feature to the core/Ros prototype.\n * For example, mixin(Ros, ['Topic'], {Topic: <Topic>})\n * will add a topic bound to any Ros instances so a user\n * can call `var topic = ros.Topic({name: '/foo'});`\n *\n * @author Graeme Yeates - github.com/megawac\n */\nmodule.exports = function(Ros, classes, features) {\n    classes.forEach(function(className) {\n        var Class = features[className];\n        Ros.prototype[className] = function(options) {\n            options.ros = this;\n            return new Class(options);\n        };\n    });\n};\n","/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\nvar ActionClient = require('../actionlib/ActionClient');\nvar Goal = require('../actionlib/Goal');\n\nvar Service = require('../core/Service.js');\nvar ServiceRequest = require('../core/ServiceRequest.js');\nvar Topic = require('../core/Topic.js');\n\nvar Transform = require('../math/Transform');\n\n/**\n * A TF Client that listens to TFs from tf2_web_republisher.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * ros - the ROSLIB.Ros connection handle\n *   * fixedFrame - the fixed frame, like /base_link\n *   * angularThres - the angular threshold for the TF republisher\n *   * transThres - the translation threshold for the TF republisher\n *   * rate - the rate for the TF republisher\n *   * updateDelay - the time (in ms) to wait after a new subscription\n *                   to update the TF republisher's list of TFs\n *   * topicTimeout - the timeout parameter for the TF republisher\n *   * serverName (optional) - the name of the tf2_web_republisher server\n *   * repubServiceName (optional) - the name of the republish_tfs service (non groovy compatibility mode only)\n *   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t default: '/republish_tfs'\n */\nfunction TFClient(options) {\n  options = options || {};\n  this.ros = options.ros;\n  this.fixedFrame = options.fixedFrame || '/base_link';\n  this.angularThres = options.angularThres || 2.0;\n  this.transThres = options.transThres || 0.01;\n  this.rate = options.rate || 10.0;\n  this.updateDelay = options.updateDelay || 50;\n  var seconds = options.topicTimeout || 2.0;\n  var secs = Math.floor(seconds);\n  var nsecs = Math.floor((seconds - secs) * 1000000000);\n  this.topicTimeout = {\n    secs: secs,\n    nsecs: nsecs\n  };\n  this.serverName = options.serverName || '/tf2_web_republisher';\n  this.repubServiceName = options.repubServiceName || '/republish_tfs';\n\n  this.currentGoal = false;\n  this.currentTopic = false;\n  this.frameInfos = {};\n  this.republisherUpdateRequested = false;\n\n  // Create an Action client\n  this.actionClient = new ActionClient({\n    ros : options.ros,\n    serverName : this.serverName,\n    actionName : 'tf2_web_republisher/TFSubscriptionAction',\n    omitStatus : true,\n    omitResult : true\n  });\n\n  // Create a Service client\n  this.serviceClient = new Service({\n    ros: options.ros,\n    name: this.repubServiceName,\n    serviceType: 'tf2_web_republisher/RepublishTFs'\n  });\n}\n\n/**\n * Process the incoming TF message and send them out using the callback\n * functions.\n *\n * @param tf - the TF message from the server\n */\nTFClient.prototype.processTFArray = function(tf) {\n  var that = this;\n  tf.transforms.forEach(function(transform) {\n    var frameID = transform.child_frame_id;\n    if (frameID[0] === '/')\n    {\n      frameID = frameID.substring(1);\n    }\n    var info = this.frameInfos[frameID];\n    if (info) {\n      info.transform = new Transform({\n        translation : transform.transform.translation,\n        rotation : transform.transform.rotation\n      });\n      info.cbs.forEach(function(cb) {\n        cb(info.transform);\n      });\n    }\n  }, this);\n};\n\n/**\n * Create and send a new goal (or service request) to the tf2_web_republisher\n * based on the current list of TFs.\n */\nTFClient.prototype.updateGoal = function() {\n  var goalMessage = {\n    source_frames : Object.keys(this.frameInfos),\n    target_frame : this.fixedFrame,\n    angular_thres : this.angularThres,\n    trans_thres : this.transThres,\n    rate : this.rate\n  };\n\n  // if we're running in groovy compatibility mode (the default)\n  // then use the action interface to tf2_web_republisher\n  if(this.ros.groovyCompatibility) {\n    if (this.currentGoal) {\n      this.currentGoal.cancel();\n    }\n    this.currentGoal = new Goal({\n      actionClient : this.actionClient,\n      goalMessage : goalMessage\n    });\n\n    this.currentGoal.on('feedback', this.processTFArray.bind(this));\n    this.currentGoal.send();\n  }\n  else {\n    // otherwise, use the service interface\n    // The service interface has the same parameters as the action,\n    // plus the timeout\n    goalMessage.timeout = this.topicTimeout;\n    var request = new ServiceRequest(goalMessage);\n\n    this.serviceClient.callService(request, this.processResponse.bind(this));\n  }\n\n  this.republisherUpdateRequested = false;\n};\n\n/**\n * Process the service response and subscribe to the tf republisher\n * topic\n *\n * @param response the service response containing the topic name\n */\nTFClient.prototype.processResponse = function(response) {\n  // if we subscribed to a topic before, unsubscribe so\n  // the republisher stops publishing it\n  if (this.currentTopic) {\n    this.currentTopic.unsubscribe();\n  }\n\n  this.currentTopic = new Topic({\n    ros: this.ros,\n    name: response.topic_name,\n    messageType: 'tf2_web_republisher/TFArray'\n  });\n  this.currentTopic.subscribe(this.processTFArray.bind(this));\n};\n\n/**\n * Subscribe to the given TF frame.\n *\n * @param frameID - the TF frame to subscribe to\n * @param callback - function with params:\n *   * transform - the transform data\n */\nTFClient.prototype.subscribe = function(frameID, callback) {\n  // remove leading slash, if it's there\n  if (frameID[0] === '/')\n  {\n    frameID = frameID.substring(1);\n  }\n  // if there is no callback registered for the given frame, create emtpy callback list\n  if (!this.frameInfos[frameID]) {\n    this.frameInfos[frameID] = {\n      cbs: []\n    };\n    if (!this.republisherUpdateRequested) {\n      setTimeout(this.updateGoal.bind(this), this.updateDelay);\n      this.republisherUpdateRequested = true;\n    }\n  }\n  // if we already have a transform, call back immediately\n  else if (this.frameInfos[frameID].transform) {\n    callback(this.frameInfos[frameID].transform);\n  }\n  this.frameInfos[frameID].cbs.push(callback);\n};\n\n/**\n * Unsubscribe from the given TF frame.\n *\n * @param frameID - the TF frame to unsubscribe from\n * @param callback - the callback function to remove\n */\nTFClient.prototype.unsubscribe = function(frameID, callback) {\n  // remove leading slash, if it's there\n  if (frameID[0] === '/')\n  {\n    frameID = frameID.substring(1);\n  }\n  var info = this.frameInfos[frameID];\n  for (var cbs = info && info.cbs || [], idx = cbs.length; idx--;) {\n    if (cbs[idx] === callback) {\n      cbs.splice(idx, 1);\n    }\n  }\n  if (!callback || cbs.length === 0) {\n    delete this.frameInfos[frameID];\n  }\n};\n\n/**\n * Unsubscribe and unadvertise all topics associated with this TFClient.\n */\nTFClient.prototype.dispose = function() {\n  this.actionClient.dispose();\n  if (this.currentTopic) {\n    this.currentTopic.unsubscribe();\n  }\n};\n\nmodule.exports = TFClient;\n","var Ros = require('../core/Ros');\nvar mixin = require('../mixin');\n\nvar tf = module.exports = {\n    TFClient: require('./TFClient')\n};\n\nmixin(Ros, ['TFClient'], tf);","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Vector3 = require('../math/Vector3');\nvar UrdfTypes = require('./UrdfTypes');\n\n/**\n * A Box element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfBox(options) {\n  this.dimension = null;\n  this.type = UrdfTypes.URDF_BOX;\n\n  // Parse the xml string\n  var xyz = options.xml.getAttribute('size').split(' ');\n  this.dimension = new Vector3({\n    x : parseFloat(xyz[0]),\n    y : parseFloat(xyz[1]),\n    z : parseFloat(xyz[2])\n  });\n}\n\nmodule.exports = UrdfBox;","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\n/**\n * A Color element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfColor(options) {\n  // Parse the xml string\n  var rgba = options.xml.getAttribute('rgba').split(' ');\n  this.r = parseFloat(rgba[0]);\n  this.g = parseFloat(rgba[1]);\n  this.b = parseFloat(rgba[2]);\n  this.a = parseFloat(rgba[3]);\n}\n\nmodule.exports = UrdfColor;","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar UrdfTypes = require('./UrdfTypes');\n\n/**\n * A Cylinder element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfCylinder(options) {\n  this.type = UrdfTypes.URDF_CYLINDER;\n  this.length = parseFloat(options.xml.getAttribute('length'));\n  this.radius = parseFloat(options.xml.getAttribute('radius'));\n}\n\nmodule.exports = UrdfCylinder;","/**\n * @fileOverview\n * @author David V. Lu!!  davidvlu@gmail.com\n */\n\nvar Pose = require('../math/Pose');\nvar Vector3 = require('../math/Vector3');\nvar Quaternion = require('../math/Quaternion');\n\n/**\n * A Joint element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfJoint(options) {\n  this.name = options.xml.getAttribute('name');\n  this.type = options.xml.getAttribute('type');\n\n  var parents = options.xml.getElementsByTagName('parent');\n  if(parents.length > 0) {\n    this.parent = parents[0].getAttribute('link');\n  }\n\n  var children = options.xml.getElementsByTagName('child');\n  if(children.length > 0) {\n    this.child = children[0].getAttribute('link');\n  }\n\n  var limits = options.xml.getElementsByTagName('limit');\n  if (limits.length > 0) {\n    this.minval = parseFloat( limits[0].getAttribute('lower') );\n    this.maxval = parseFloat( limits[0].getAttribute('upper') );\n  }\n\n  // Origin\n  var origins = options.xml.getElementsByTagName('origin');\n  if (origins.length === 0) {\n    // use the identity as the default\n    this.origin = new Pose();\n  } else {\n    // Check the XYZ\n    var xyz = origins[0].getAttribute('xyz');\n    var position = new Vector3();\n    if (xyz) {\n      xyz = xyz.split(' ');\n      position = new Vector3({\n        x : parseFloat(xyz[0]),\n        y : parseFloat(xyz[1]),\n        z : parseFloat(xyz[2])\n      });\n    }\n\n    // Check the RPY\n    var rpy = origins[0].getAttribute('rpy');\n    var orientation = new Quaternion();\n    if (rpy) {\n      rpy = rpy.split(' ');\n      // Convert from RPY\n      var roll = parseFloat(rpy[0]);\n      var pitch = parseFloat(rpy[1]);\n      var yaw = parseFloat(rpy[2]);\n      var phi = roll / 2.0;\n      var the = pitch / 2.0;\n      var psi = yaw / 2.0;\n      var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the)\n          * Math.sin(psi);\n      var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the)\n          * Math.sin(psi);\n      var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the)\n          * Math.cos(psi);\n      var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the)\n          * Math.sin(psi);\n\n      orientation = new Quaternion({\n        x : x,\n        y : y,\n        z : z,\n        w : w\n      });\n      orientation.normalize();\n    }\n    this.origin = new Pose({\n      position : position,\n      orientation : orientation\n    });\n  }\n}\n\nmodule.exports = UrdfJoint;\n","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar UrdfVisual = require('./UrdfVisual');\n\n/**\n * A Link element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfLink(options) {\n  this.name = options.xml.getAttribute('name');\n  this.visuals = [];\n  var visuals = options.xml.getElementsByTagName('visual');\n\n  for( var i=0; i<visuals.length; i++ ) {\n    this.visuals.push( new UrdfVisual({\n      xml : visuals[i]\n    }) );\n  }\n}\n\nmodule.exports = UrdfLink;","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar UrdfColor = require('./UrdfColor');\n\n/**\n * A Material element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfMaterial(options) {\n  this.textureFilename = null;\n  this.color = null;\n\n  this.name = options.xml.getAttribute('name');\n\n  // Texture\n  var textures = options.xml.getElementsByTagName('texture');\n  if (textures.length > 0) {\n    this.textureFilename = textures[0].getAttribute('filename');\n  }\n\n  // Color\n  var colors = options.xml.getElementsByTagName('color');\n  if (colors.length > 0) {\n    // Parse the RBGA string\n    this.color = new UrdfColor({\n      xml : colors[0]\n    });\n  }\n}\n\nUrdfMaterial.prototype.isLink = function() {\n  return this.color === null && this.textureFilename === null;\n};\n\nvar assign = require('object-assign');\n\nUrdfMaterial.prototype.assign = function(obj) {\n    return assign(this, obj);\n};\n\nmodule.exports = UrdfMaterial;\n","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Vector3 = require('../math/Vector3');\nvar UrdfTypes = require('./UrdfTypes');\n\n/**\n * A Mesh element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfMesh(options) {\n  this.scale = null;\n\n  this.type = UrdfTypes.URDF_MESH;\n  this.filename = options.xml.getAttribute('filename');\n\n  // Check for a scale\n  var scale = options.xml.getAttribute('scale');\n  if (scale) {\n    // Get the XYZ\n    var xyz = scale.split(' ');\n    this.scale = new Vector3({\n      x : parseFloat(xyz[0]),\n      y : parseFloat(xyz[1]),\n      z : parseFloat(xyz[2])\n    });\n  }\n}\n\nmodule.exports = UrdfMesh;","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar UrdfMaterial = require('./UrdfMaterial');\nvar UrdfLink = require('./UrdfLink');\nvar UrdfJoint = require('./UrdfJoint');\nvar DOMParser = require('xmldom').DOMParser;\n\n// See https://developer.mozilla.org/docs/XPathResult#Constants\nvar XPATH_FIRST_ORDERED_NODE_TYPE = 9;\n\n/**\n * A URDF Model can be used to parse a given URDF into the appropriate elements.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n *  * string - the XML element to parse as a string\n */\nfunction UrdfModel(options) {\n  options = options || {};\n  var xmlDoc = options.xml;\n  var string = options.string;\n  this.materials = {};\n  this.links = {};\n  this.joints = {};\n\n  // Check if we are using a string or an XML element\n  if (string) {\n    // Parse the string\n    var parser = new DOMParser();\n    xmlDoc = parser.parseFromString(string, 'text/xml');\n  }\n\n  // Initialize the model with the given XML node.\n  // Get the robot tag\n  var robotXml = xmlDoc.documentElement;\n\n  // Get the robot name\n  this.name = robotXml.getAttribute('name');\n\n  // Parse all the visual elements we need\n  for (var nodes = robotXml.childNodes, i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (node.tagName === 'material') {\n      var material = new UrdfMaterial({\n        xml : node\n      });\n      // Make sure this is unique\n      if (this.materials[material.name] !== void 0) {\n        if( this.materials[material.name].isLink() ) {\n          this.materials[material.name].assign( material );\n        } else {\n          console.warn('Material ' + material.name + 'is not unique.');\n        }\n      } else {\n        this.materials[material.name] = material;\n      }\n    } else if (node.tagName === 'link') {\n      var link = new UrdfLink({\n        xml : node\n      });\n      // Make sure this is unique\n      if (this.links[link.name] !== void 0) {\n        console.warn('Link ' + link.name + ' is not unique.');\n      } else {\n        // Check for a material\n        for( var j=0; j<link.visuals.length; j++ )\n        {\n          var mat = link.visuals[j].material; \n          if ( mat !== null ) {\n            if (this.materials[mat.name] !== void 0) {\n              link.visuals[j].material = this.materials[mat.name];\n            } else {\n              this.materials[mat.name] = mat;\n            }\n          }\n        }\n\n        // Add the link\n        this.links[link.name] = link;\n      }\n    } else if (node.tagName === 'joint') {\n      var joint = new UrdfJoint({\n        xml : node\n      });\n      this.joints[joint.name] = joint;\n    }\n  }\n}\n\nmodule.exports = UrdfModel;\n","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar UrdfTypes = require('./UrdfTypes');\n\n/**\n * A Sphere element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfSphere(options) {\n  this.type = UrdfTypes.URDF_SPHERE;\n  this.radius = parseFloat(options.xml.getAttribute('radius'));\n}\n\nmodule.exports = UrdfSphere;","module.exports = {\n\tURDF_SPHERE : 0,\n\tURDF_BOX : 1,\n\tURDF_CYLINDER : 2,\n\tURDF_MESH : 3\n};\n","/**\n * @fileOverview \n * @author Benjamin Pitzer - ben.pitzer@gmail.com\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Pose = require('../math/Pose');\nvar Vector3 = require('../math/Vector3');\nvar Quaternion = require('../math/Quaternion');\n\nvar UrdfCylinder = require('./UrdfCylinder');\nvar UrdfBox = require('./UrdfBox');\nvar UrdfMaterial = require('./UrdfMaterial');\nvar UrdfMesh = require('./UrdfMesh');\nvar UrdfSphere = require('./UrdfSphere');\n\n/**\n * A Visual element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfVisual(options) {\n  var xml = options.xml;\n  this.origin = null;\n  this.geometry = null;\n  this.material = null;\n\n  this.name = options.xml.getAttribute('name');\n\n  // Origin\n  var origins = xml.getElementsByTagName('origin');\n  if (origins.length === 0) {\n    // use the identity as the default\n    this.origin = new Pose();\n  } else {\n    // Check the XYZ\n    var xyz = origins[0].getAttribute('xyz');\n    var position = new Vector3();\n    if (xyz) {\n      xyz = xyz.split(' ');\n      position = new Vector3({\n        x : parseFloat(xyz[0]),\n        y : parseFloat(xyz[1]),\n        z : parseFloat(xyz[2])\n      });\n    }\n\n    // Check the RPY\n    var rpy = origins[0].getAttribute('rpy');\n    var orientation = new Quaternion();\n    if (rpy) {\n      rpy = rpy.split(' ');\n      // Convert from RPY\n      var roll = parseFloat(rpy[0]);\n      var pitch = parseFloat(rpy[1]);\n      var yaw = parseFloat(rpy[2]);\n      var phi = roll / 2.0;\n      var the = pitch / 2.0;\n      var psi = yaw / 2.0;\n      var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the)\n          * Math.sin(psi);\n      var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the)\n          * Math.sin(psi);\n      var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the)\n          * Math.cos(psi);\n      var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the)\n          * Math.sin(psi);\n\n      orientation = new Quaternion({\n        x : x,\n        y : y,\n        z : z,\n        w : w\n      });\n      orientation.normalize();\n    }\n    this.origin = new Pose({\n      position : position,\n      orientation : orientation\n    });\n  }\n\n  // Geometry\n  var geoms = xml.getElementsByTagName('geometry');\n  if (geoms.length > 0) {\n    var geom = geoms[0];\n    var shape = null;\n    // Check for the shape\n    for (var i = 0; i < geom.childNodes.length; i++) {\n      var node = geom.childNodes[i];\n      if (node.nodeType === 1) {\n        shape = node;\n        break;\n      }\n    }\n    // Check the type\n    var type = shape.nodeName;\n    if (type === 'sphere') {\n      this.geometry = new UrdfSphere({\n        xml : shape\n      });\n    } else if (type === 'box') {\n      this.geometry = new UrdfBox({\n        xml : shape\n      });\n    } else if (type === 'cylinder') {\n      this.geometry = new UrdfCylinder({\n        xml : shape\n      });\n    } else if (type === 'mesh') {\n      this.geometry = new UrdfMesh({\n        xml : shape\n      });\n    } else {\n      console.warn('Unknown geometry type ' + type);\n    }\n  }\n\n  // Material\n  var materials = xml.getElementsByTagName('material');\n  if (materials.length > 0) {\n    this.material = new UrdfMaterial({\n      xml : materials[0]\n    });\n  }\n}\n\nmodule.exports = UrdfVisual;","module.exports = require('object-assign')({\n    UrdfBox: require('./UrdfBox'),\n    UrdfColor: require('./UrdfColor'),\n    UrdfCylinder: require('./UrdfCylinder'),\n    UrdfLink: require('./UrdfLink'),\n    UrdfMaterial: require('./UrdfMaterial'),\n    UrdfMesh: require('./UrdfMesh'),\n    UrdfModel: require('./UrdfModel'),\n    UrdfSphere: require('./UrdfSphere'),\n    UrdfVisual: require('./UrdfVisual')\n}, require('./UrdfTypes'));\n","'use strict';\n\nvar UPPER32 = Math.pow(2, 32);\n\nvar warnedPrecision = false;\nfunction warnPrecision() {\n  if (!warnedPrecision) {\n    warnedPrecision = true;\n    console.warn('CBOR 64-bit integer array values may lose precision. No further warnings.');\n  }\n}\n\n/**\n * Unpacks 64-bit unsigned integer from byte array.\n * @param {Uint8Array} bytes\n*/\nfunction decodeUint64LE(bytes) {\n  warnPrecision();\n\n  var byteLen = bytes.byteLength;\n  var offset = bytes.byteOffset;\n  var arrLen = byteLen / 8;\n\n  var buffer = bytes.buffer.slice(offset, offset + byteLen);\n  var uint32View = new Uint32Array(buffer);\n\n  var arr = new Array(arrLen);\n  for (var i = 0; i < arrLen; i++) {\n    var si = i * 2;\n    var lo = uint32View[si];\n    var hi = uint32View[si+1];\n    arr[i] = lo + UPPER32 * hi;\n  }\n\n  return arr;\n}\n\n/**\n * Unpacks 64-bit signed integer from byte array.\n * @param {Uint8Array} bytes\n*/\nfunction decodeInt64LE(bytes) {\n  warnPrecision();\n\n  var byteLen = bytes.byteLength;\n  var offset = bytes.byteOffset;\n  var arrLen = byteLen / 8;\n\n  var buffer = bytes.buffer.slice(offset, offset + byteLen);\n  var uint32View = new Uint32Array(buffer);\n  var int32View = new Int32Array(buffer);\n\n  var arr = new Array(arrLen);\n  for (var i = 0; i < arrLen; i++) {\n    var si = i * 2;\n    var lo = uint32View[si];\n    var hi = int32View[si+1];\n    arr[i] = lo + UPPER32 * hi;\n  }\n\n  return arr;\n}\n\n/**\n * Unpacks typed array from byte array.\n * @param {Uint8Array} bytes\n * @param {type} ArrayType - desired output array type\n*/\nfunction decodeNativeArray(bytes, ArrayType) {\n  var byteLen = bytes.byteLength;\n  var offset = bytes.byteOffset;\n  var buffer = bytes.buffer.slice(offset, offset + byteLen);\n  return new ArrayType(buffer);\n}\n\n/**\n * Support a subset of draft CBOR typed array tags:\n *   <https://tools.ietf.org/html/draft-ietf-cbor-array-tags-00>\n * Only support little-endian tags for now.\n */\nvar nativeArrayTypes = {\n  64: Uint8Array,\n  69: Uint16Array,\n  70: Uint32Array,\n  72: Int8Array,\n  77: Int16Array,\n  78: Int32Array,\n  85: Float32Array,\n  86: Float64Array\n};\n\n/**\n * We can also decode 64-bit integer arrays, since ROS has these types.\n */\nvar conversionArrayTypes = {\n  71: decodeUint64LE,\n  79: decodeInt64LE\n};\n\n/**\n * Handles CBOR typed array tags during decoding.\n * @param {Uint8Array} data\n * @param {Number} tag\n */\nfunction cborTypedArrayTagger(data, tag) {\n  if (tag in nativeArrayTypes) {\n    var arrayType = nativeArrayTypes[tag];\n    return decodeNativeArray(data, arrayType);\n  }\n  if (tag in conversionArrayTypes) {\n    return conversionArrayTypes[tag](data);\n  }\n  return data;\n}\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = cborTypedArrayTagger;\n}\n","module.exports = typeof window !== 'undefined' ? window.WebSocket : WebSocket;\n","/* global document */\nmodule.exports = function Canvas() {\n\treturn document.createElement('canvas');\n};","/**\n * @fileOverview\n * @author Graeme Yeates - github.com/megawac\n */\n\n'use strict';\n\nvar Canvas = require('canvas');\nvar Image = Canvas.Image || window.Image;\n\n/**\n * If a message was compressed as a PNG image (a compression hack since\n * gzipping over WebSockets * is not supported yet), this function places the\n * \"image\" in a canvas element then decodes the * \"image\" as a Base64 string.\n *\n * @private\n * @param data - object containing the PNG data.\n * @param callback - function with params:\n *   * data - the uncompressed data\n */\nfunction decompressPng(data, callback) {\n  // Uncompresses the data before sending it through (use image/canvas to do so).\n  var image = new Image();\n  // When the image loads, extracts the raw data (JSON message).\n  image.onload = function() {\n    // Creates a local canvas to draw on.\n    var canvas = new Canvas();\n    var context = canvas.getContext('2d');\n\n    // Sets width and height.\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    // Prevents anti-aliasing and loosing data\n    context.imageSmoothingEnabled = false;\n    context.webkitImageSmoothingEnabled = false;\n    context.mozImageSmoothingEnabled = false;\n\n    // Puts the data into the image.\n    context.drawImage(image, 0, 0);\n    // Grabs the raw, uncompressed data.\n    var imageData = context.getImageData(0, 0, image.width, image.height).data;\n\n    // Constructs the JSON.\n    var jsonData = '';\n    for (var i = 0; i < imageData.length; i += 4) {\n      // RGB\n      jsonData += String.fromCharCode(imageData[i], imageData[i + 1], imageData[i + 2]);\n    }\n    callback(JSON.parse(jsonData));\n  };\n  // Sends the image data to load.\n  image.src = 'data:image/png;base64,' + data;\n}\n\nmodule.exports = decompressPng;\n","exports.DOMImplementation = window.DOMImplementation;\nexports.XMLSerializer = window.XMLSerializer;\nexports.DOMParser = window.DOMParser;\n","var work = require('webworkify');\nvar workerSocketImpl = require('./workerSocketImpl');\n\nfunction WorkerSocket(uri) {\n  this.socket_ = work(workerSocketImpl);\n\n  this.socket_.addEventListener('message', this.handleWorkerMessage_.bind(this));\n\n  this.socket_.postMessage({\n    uri: uri,\n  });\n}\n\nWorkerSocket.prototype.handleWorkerMessage_ = function(ev) {\n  var data = ev.data;\n  if (data instanceof ArrayBuffer || typeof data === 'string') {\n    // binary or JSON message from rosbridge\n    this.onmessage(ev);\n  } else {\n    // control message from the wrapped WebSocket\n    var type = data.type;\n    if (type === 'close') {\n      this.onclose(null);\n    } else if (type === 'open') {\n      this.onopen(null);\n    } else if (type === 'error') {\n      this.onerror(null);\n    } else {\n      throw 'Unknown message from workersocket';\n    }\n  }\n};\n\nWorkerSocket.prototype.send = function(data) {\n  this.socket_.postMessage(data);\n};\n\nWorkerSocket.prototype.close = function() {\n  this.socket_.postMessage({\n    close: true\n  });\n};\n\nmodule.exports = WorkerSocket;\n","var WebSocket = WebSocket || require('ws');\n\nmodule.exports = function(self) {\n  var socket = null;\n\n  function handleSocketMessage(ev) {\n    var data = ev.data;\n\n    if (data instanceof ArrayBuffer) {\n      // binary message, transfer for speed\n      self.postMessage(data, [data]);\n    } else {\n      // JSON message, copy string\n      self.postMessage(data);\n    }\n  }\n\n  function handleSocketControl(ev) {\n    self.postMessage({type: ev.type});\n  }\n\n  self.addEventListener('message', function(ev) {\n    var data = ev.data;\n\n    if (typeof data === 'string') {\n      // JSON message from ROSLIB\n      socket.send(data);\n    } else {\n      // control message\n      if (data.hasOwnProperty('close')) {\n        socket.close();\n        socket = null;\n      } else if (data.hasOwnProperty('uri')) {\n        var uri = data.uri;\n\n        socket = new WebSocket(uri);\n        socket.binaryType = 'arraybuffer';\n\n        socket.onmessage = handleSocketMessage;\n        socket.onclose = handleSocketControl;\n        socket.onopen = handleSocketControl;\n        socket.onerror = handleSocketControl;\n      } else {\n        throw 'Unknown message to WorkerSocket';\n      }\n    }\n  });\n};\n","var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            'function(require,module,exports){' + fn + '(self); }',\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        'function(require,module,exports){' +\n            // try to call default if defined to also support babel esmodule exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);' +\n        '}',\n        scache\n    ];\n\n    var workerSources = {};\n    resolveSources(skey);\n\n    function resolveSources(key) {\n        workerSources[key] = true;\n\n        for (var depPath in sources[key][1]) {\n            var depKey = sources[key][1][depPath];\n            if (!workerSources[depKey]) {\n                resolveSources(depKey);\n            }\n        }\n    }\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(workerSources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'joystick',\n  templateUrl: './joystick.component.html'\n})\nexport class JoystickComponent {\n  @Input()\n  public streaming : boolean;\n\n  constructor() {}\n\n}\n","export default \".green {\\n  background-color: green;\\n}\\n\\n.blue {\\n  background-color: blue;\\n}\\n\\n.red {\\n  background-color: red;\\n}\\n\\n.orange {\\n  background-color: orange;\\n}\\n\\n.form {\\n  min-width: 70%;\\n  max-width: 80%;\\n  align-self: center;\\n  margin: 0 auto;\\n  /* border: 1px solid grey; */\\n}\\n\\np {\\n  padding: 0 !important;\\n}\\n\\n/* MAP */\\n\\n.map {\\n  width: 100%;\\n  display: -webkit-box;\\n  display: flex;\\n  margin: 0 auto;\\n}\\n\\n.map div {\\n  width: 50%;\\n  margin: 0 auto;\\n  border: 2px solid grey;\\n  cursor: hand !important;\\n  color: white;\\n  font-weight: bold;\\n  text-align: center;\\n  height: 150px;\\n  opacity: 0.5;\\n}\\n\\n.map div:hover {\\n  opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpYW5hL0RvY3VtZW50b3MvUm9ib3RpY2EvSmlua29Sb2JvdGljcy9qaW5rb2JvdC9zcmMvYXBwL2NvbXBvbmVudHMvbWFwL21hcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9tYXAvbWFwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQVMsdUJBQUE7QUNFVDs7QUREQTtFQUFRLHNCQUFBO0FDS1I7O0FESkE7RUFBTyxxQkFBQTtBQ1FQOztBRFBBO0VBQVUsd0JBQUE7QUNXVjs7QURUQTtFQUNJLGNBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0QsNEJBQUE7QUNZSDs7QURUQTtFQUNJLHFCQUFBO0FDWUo7O0FEVEEsUUFBQTs7QUFDQTtFQUNJLFdBQUE7RUFDQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSxjQUFBO0FDWUo7O0FEVEE7RUFDSSxVQUFBO0VBQ0EsY0FBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0FDWUo7O0FEVEE7RUFDSSxVQUFBO0FDWUoiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL21hcC9tYXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JlZW4geyBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjt9XG4uYmx1ZSB7IGJhY2tncm91bmQtY29sb3I6IGJsdWU7fVxuLnJlZCB7IGJhY2tncm91bmQtY29sb3I6IHJlZDt9XG4ub3JhbmdlIHsgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO31cblxuLmZvcm0ge1xuICAgIG1pbi13aWR0aDo3MCU7XG4gICAgbWF4LXdpZHRoOjgwJTtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7IFxuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgLyogYm9yZGVyOiAxcHggc29saWQgZ3JleTsgKi8gICBcbn1cblxucCB7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuXG4vKiBNQVAgKi9cbi5tYXAge1xuICAgIHdpZHRoOjEwMCU7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubWFwIGRpdiB7XG4gICAgd2lkdGg6NTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJvcmRlcjoycHggc29saWQgZ3JleTtcbiAgICBjdXJzb3I6aGFuZCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxNTBweDtcbiAgICBvcGFjaXR5OiAwLjU7XG59XG5cbi5tYXAgZGl2OmhvdmVyIHtcbiAgICBvcGFjaXR5OiAxO1xufSIsIi5ncmVlbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuXG4uYmx1ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG59XG5cbi5yZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5vcmFuZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XG59XG5cbi5mb3JtIHtcbiAgbWluLXdpZHRoOiA3MCU7XG4gIG1heC13aWR0aDogODAlO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvO1xuICAvKiBib3JkZXI6IDFweCBzb2xpZCBncmV5OyAqL1xufVxuXG5wIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuXG4vKiBNQVAgKi9cbi5tYXAge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5tYXAgZGl2IHtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyZXk7XG4gIGN1cnNvcjogaGFuZCAhaW1wb3J0YW50O1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogMTUwcHg7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuLm1hcCBkaXY6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufSJdfQ== */\"","import { NavigationService } from './../../services/ros/navigation.service';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent {\n  @Input()\n  public streaming: boolean;\n  goalString: string;\n\n  constructor(\n    private navigationService: NavigationService\n  ) {}\n\n  public start( destination_id: string ) {\n    this.navigationService.startSM(destination_id);\n    this.goalString = this.navigationService.setGoalString(destination_id);\n  }\n\n}\n","export default \":host {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpYW5hL0RvY3VtZW50b3MvUm9ib3RpY2EvSmlua29Sb2JvdGljcy9qaW5rb2JvdC9zcmMvYXBwL2NvbXBvbmVudHMvc3RyZWFtaW5nL3N0cmVhbWluZy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9zdHJlYW1pbmcvc3RyZWFtaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RyZWFtaW5nL3N0cmVhbWluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6MDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICB9IiwiOmhvc3Qge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xufSJdfQ== */\"","import { StreamingService } from 'src/app/services/ros/streaming.service';\nimport { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'streaming',\n  templateUrl: './streaming.component.html',\n  styleUrls: ['./streaming.component.scss'],\n})\nexport class StreamingComponent implements OnInit {\n  @Input()\n  public streaming: boolean;\n\n  constructor(\n    private streamingService: StreamingService\n  ) {}\n\n  ngOnInit() {\n\n    if (this.streaming) this.streamingService.setCamera();\n \n  }\n\n  closeStreaming() {\n\n    this.streamingService.setStreaming(false);\n\n  }\n\n}\n","import { StreamingComponent } from './../../components/streaming/streaming.component';\nimport { IonicModule } from \"@ionic/angular\";\nimport { RouterModule } from \"@angular/router\";\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { PlayPage } from \"./play.page\";\nimport { MapComponent } from 'src/app/components/map/map.component';\nimport { JoystickComponent } from 'src/app/components/joystick/joystick.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: \"\", component: PlayPage }]),\n  ],\n  declarations: [PlayPage, MapComponent, JoystickComponent, StreamingComponent]\n})\nexport class PlayPageModule {}\n","import { TabsComponent } from './../../components/tabs/tabs.component';\nimport { RosConnectionService } from 'src/app/services/ros/ros.service';\nimport { StreamingService } from 'src/app/services/ros/streaming.service';\nimport { Component, Input } from \"@angular/core\";\nimport { Platform } from \"@ionic/angular\";\n\n@Component({\n  selector: \"app-tab2\",\n  templateUrl: \"play.page.html\",\n})\nexport class PlayPage {\n  @Input()\n  public streaming: boolean;\n\n  view: string = \"map\";\n  camera: boolean = true;\n  \n  constructor(\n    private rosService: RosConnectionService, \n    private streamingService: StreamingService, \n    private plt: Platform, \n    public tabs: TabsComponent\n    ) {}\n\n  ngOnInit() {\n    this.rosService.connect();\n  }\n\n  show() {\n\n    if (this.view == 'camera') {\n\n      // Ponemos el streaming a true\n      this.streaming = this.streamingService.setStreaming(true);\n      // Ocultamos el header y las tabs para pantalla completa\n      this.tabs.hide();\n      // Cambiamos a la pestaña Mapa para que no se quede activa la pestaña cámara al volver a la página Play\n      this.view = 'map';\n      \n    }\n  }\n\n  closeStreaming() {\n\n    // Si es movil desbloquemos el giro de pantalla\n    if (!this.plt.testUserAgent(\"desktop\")) screen.orientation.unlock();\n    // Ponemos el streaming a false\n    this.streaming = this.streamingService.setStreaming(false);\n    // Mostramos el header y las tabs\n    this.tabs.show();\n    \n  }\n}\n","/*********************************************************************\n@name navigation.service.ts\n@description Servicio para navegación del robot\n@author Diana Hernández Soler\n@date 06/04/2020\n@license GPLv3\n*********************************************************************/\nimport { Injectable } from '@angular/core';\nimport { RosConnectionService } from 'src/app/services/ros/ros.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NavigationService {\n    goalString: string;\n    service_busy: boolean;\n    service_response: any;\n    speed: number = 0.5;\n\n    constructor(private rosService: RosConnectionService) {}\n\npublic startSM(goal){\n    this.goalString = this.setGoalString(goal);\n    this.service_busy = true;\n    this.service_response = '';\n\n    let nameService = '/jinko_navigation';\n    let typeMessage = 'jinko_service_msg/jinko_service_msg';\n    let data = {\n        destino: parseInt(goal), \n        coordenadaX: 0.0, \n        coordenadaY: 0.0\n    };\n\n    this.rosService.callService(nameService, typeMessage, data);\n}\n\nsetGoalString(goal){\n    switch(goal){\n        case 0: \n        break;\n        case 1: this.goalString = 'DOOR';\n        break;\n        case 2: this.goalString = 'STUDY';\n        break;\n        case 3: this.goalString = 'GAMES';\n        break;\n        case 4: this.goalString = 'TOUR';\n        break;\n        default:\n            this.goalString = 'no destination yet';\n    }\n    return this.goalString;\n}\n\n    public move(direction) {\n\n        let topicName: string = '/cmd_vel';\n        let typeMessage: string = 'geometry_msgs/Twist';\n        let message = this.setDirection(direction, this.speed);\n        this.rosService.publishTopic(topicName, typeMessage, message);\n\n    }\n\n    private setDirection(direction, speed) {\n        let coords: any;\n        switch(direction) {\n            case 'U':\n                coords = this.getPositionSquema();\n                coords.linear.x = speed;\n                break;\n            case 'D':\n                coords = this.getPositionSquema();\n                coords.linear.x = -speed;\n\n                break;\n            case 'L':\n                coords = this.getPositionSquema();\n                coords.angular.z = speed;\n                break;\n            case 'R':\n                coords = this.getPositionSquema();\n                coords.angular.z = -speed;\n        }\n        return coords;\n    }\n\n    private getPositionSquema() {\n        return {\n            linear: { x: 0, y: 0, z: 0 },\n            angular: { x: 0, y: 0, z: 0 }\n        }; \n    }\n\n}","/*********************************************************************\n@name ros.service.ts\n@description Servicio para comunicación con ROS\n@author Diana Hernández Soler\n@date 06/04/2020\n@license GPLv3\n*********************************************************************/\nimport { Injectable } from '@angular/core';\nimport * as ROSLIB from 'roslib';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RosConnectionService {\n    ros: ROSLIB.Ros;\n    /* PARA PROBAR EN EL MOVIL:\n    Hay que añadir\n       android:usesCleartextTraffic=\"true\"\n    dentro de <application> en el AndroidManifest.xml \n    CAMBIAR POR LA IP DE TU ORDEANDOR, el movil tiene que estar conectado a la misma red wifi */\n    url: string = '192.168.1.111';\n    port: '9090';\n    connected: boolean = false;\n    loading: boolean = false;\n    service_busy: boolean = false;\n\n    constructor(private plt: Platform) { }\n\n    connect() {\n\n        if (this.plt.testUserAgent('desktop')) this.url = 'localhost' + ':' + this.port;\n\n        this.ros = new ROSLIB.Ros({\n            url: 'ws://192.168.1.111:9090' ,\n        })\n\n        this.ros.on('connection', () => {\n            this.connected = true\n            this.loading = false\n            console.log('Connection to ROSBridge established!')\n        })\n        this.ros.on('error', (error) => {\n            console.log((new Date).toTimeString() + ` - Error: ${error}`);\n        })\n        this.ros.on('close', () => {\n            console.log((new Date()).toTimeString() + ' - Disconnected!');\n            this.connected = false\n            this.loading = false\n        })\n    }\n\n    public getUrl() {\n        return this.url;\n    }\n\n    /***************************************************************************************\n    callService()\n    @author Diana Hernández\n    @description Función genérica para comunicarse con ros mediante Servicios\n    @params nameService: Servicio que será llamado\n    @params typeMessage: Tipo de mensaje que necesita el servicio (1º parámetro)\n    @params data: información que se quiere pasar a ros\n    @params callback: Función para manejar la respuesta del servicio\n    Por defecto hace un console.log del resultado del servicio\n    @date 23/04/2020\n    ****************************************************************************************/\n    callService(nameSerivce, typeMessage, data: {}, callback = (response: any) =>{console.log(response)}) {\n        \n        let service = new ROSLIB.Service({\n            ros: this.ros,\n            name: nameSerivce,\n            serviceType: typeMessage\n         })\n\n        let request = new ROSLIB.ServiceRequest(data);\n\n        service.callService(request, (result) => {\n            this.service_busy = false\n            callback(result)\n        }, (error) => {\n            this.service_busy = false\n            console.error(error)\n        })\n    };\n\n    /***************************************************************************************\n    publishTopic()\n    @author Diana Hernández\n    @description Función genérica para publicar en un topic \n    @params topicName: nombre del topic en que se quiere publicar.\n    @params typeMessage: typo de mensaje que requiere el Topic.\n    @params data?: información que se quiere publicar \n    @date 23/04/2020\n    ****************************************************************************************/\n    public publishTopic(topicName: string, typeMessage: string, data = {}) {\n     \n         let topic = new ROSLIB.Topic({\n            ros: this.ros,\n            name: topicName,\n            messageType: typeMessage\n        });\n\n        topic.publish(new ROSLIB.Message(data));\n    }\n       \n    disconnect() {\n        if (this.connected) this.ros.close();\n    }\n\n}","/*********************************************************************\n@name streaming.service.ts\n@description Servicio para iniciar el streaming\n@author Diana Hernández Soler\n@date 06/04/2020\n@license GPLv3\n*********************************************************************/\nimport { RosConnectionService } from 'src/app/services/ros/ros.service';\nimport { Injectable } from \"@angular/core\";\nimport { Platform } from \"@ionic/angular\";\ndeclare let MJPEGCANVAS;\n@Injectable({\n  providedIn: \"root\",\n})\n\nexport class StreamingService {\n  streaming: boolean = false;\n\n  // Tamaño de la pantalla\n  screenSize = { \n    w: window.innerWidth, \n    h: window.innerHeight \n  }\n\n  constructor( \n    private plt: Platform, \n    private rosService: RosConnectionService ) {}\n\n  public setCamera() {\n   \n    // Si es dispositivo movil bloquear en posición landscape\n    if (!this.plt.testUserAgent(\"desktop\")) {\n\n      screen.orientation.lock(\"landscape-primary\");\n      this.screenSize.w = window.innerHeight;\n      this.screenSize.h = window.innerWidth;\n\n    }\n\n    new MJPEGCANVAS.Viewer({\n      divID: \"divCamera\",\n      host: '192.168.1.111',\n      width: this.screenSize.w,\n      height: this.screenSize.h,\n      topic: '/turtlebot3/camera/image_raw',\n      ssl: false,\n    }) || {};\n\n  }\n\n  public setStreaming(bol: boolean): boolean {\n    this.streaming = bol;\n    return bol;\n  }\n\n  public isStreamingSync(): boolean {\n    return this.streaming;\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-play-play-module-es5.js"}